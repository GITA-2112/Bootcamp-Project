{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Assignment Day 17 - Exploratory Data Analysis & Supervised Machine Learning"],"metadata":{"id":"K7F6ad7jQ-qW"}},{"cell_type":"markdown","source":["# Telco Customer Churn\n","\n","### Dataset Description :\n","It is a dataset containing usage, demographic and abandonment status data about the customer.\n","\n","- customer ID: Customer ID\n","- gender: Whether the customer is a male or a female\n","- SeniorCitizen: Whether the customer is a senior citizen or not (1, 0)\n","- Partner: Whether the customer has a partner or not (Yes, No)\n","- Dependents: Whether the customer has dependents or not (Yes, No)\n","- tenure: Number of months the customer has stayed with the company\n","- PhoneService: Whether the customer has a phone service or not (Yes, No)\n","- MultipleLines: Whether the customer has multiple lines or not (Yes, No, No phone service)\n","- InternetService: Customer’s internet service provider (DSL, Fiber optic, No)\n","- OnlineSecurity: Whether the customer has online security or not (Yes, No, No internet service)\n","- OnlineBackup: Whether the customer has online backup or not (Yes, No, No internet service)\n","- DeviceProtection: Whether the customer has device protection or not (Yes, No, No internet service)\n","- TechSupport: Whether the customer has tech support or not (Yes, No, No internet service)\n","- StreamingTV: Whether the customer has streaming TV or not (Yes, No, No internet service)\n","- StreamingMovies: Whether the customer has streaming movies or not (Yes, No, No internet service)\n","- Contract: The contract term of the customer (Month-to-month, One year, Two year)\n","- PaperlessBilling: Whether the customer has paperless billing or not (Yes, No)\n","- PaymentMethod: The customer’s payment method (Electronic check, Mailed check, - Bank transfer (automatic), Credit card (automatic))\n","- MonthlyCharges: The amount charged to the customer monthly\n","- TotalCharges: The total amount charged to the customer\n","- **Churn: Whether the customer churned or not (Yes or No)\n","Customer churn is the number of customers that stopped using your company's product or service during a certain time frame.**\n"],"metadata":{"id":"26gN9AaQOa7r"}},{"cell_type":"code","execution_count":1,"metadata":{"id":"G-o_nj2EOaDz","executionInfo":{"status":"ok","timestamp":1690866041681,"user_tz":-420,"elapsed":2777,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}}},"outputs":[],"source":["# import library\n","\n","import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns"]},{"cell_type":"code","source":["# load & reading dataset\n","\n","telco = pd.read_csv('Telco.Customer.Churn.csv')\n"],"metadata":{"id":"gZ8M6GhKSJ-X","executionInfo":{"status":"ok","timestamp":1690866041683,"user_tz":-420,"elapsed":42,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["telco.sample(3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":289},"id":"yOYsIKjWSlsV","executionInfo":{"status":"ok","timestamp":1690866046544,"user_tz":-420,"elapsed":364,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"7eeb3b6f-2b14-48d7-ef28-4fd572a48566"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      customerID  gender  SeniorCitizen Partner Dependents  tenure  \\\n","3970  2541-YGPKE    Male              0     Yes        Yes      42   \n","5763  9633-XQABV  Female              0      No         No       3   \n","3000  7613-LLQFO    Male              0      No         No      12   \n","\n","     PhoneService MultipleLines InternetService OnlineSecurity  ...  \\\n","3970          Yes            No             DSL            Yes  ...   \n","5763          Yes            No     Fiber optic             No  ...   \n","3000          Yes           Yes     Fiber optic             No  ...   \n","\n","     DeviceProtection TechSupport StreamingTV StreamingMovies        Contract  \\\n","3970               No         Yes          No             Yes        One year   \n","5763               No          No          No              No  Month-to-month   \n","3000               No          No         Yes              No  Month-to-month   \n","\n","     PaperlessBilling            PaymentMethod MonthlyCharges  TotalCharges  \\\n","3970               No  Credit card (automatic)          63.70       2763.35   \n","5763              Yes         Electronic check          70.25         229.7   \n","3000              Yes         Electronic check          84.45       1059.55   \n","\n","     Churn  \n","3970    No  \n","5763    No  \n","3000   Yes  \n","\n","[3 rows x 21 columns]"],"text/html":["\n","\n","  <div id=\"df-eb78ba17-c1e3-42ad-9443-8a6fd3d9034a\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>customerID</th>\n","      <th>gender</th>\n","      <th>SeniorCitizen</th>\n","      <th>Partner</th>\n","      <th>Dependents</th>\n","      <th>tenure</th>\n","      <th>PhoneService</th>\n","      <th>MultipleLines</th>\n","      <th>InternetService</th>\n","      <th>OnlineSecurity</th>\n","      <th>...</th>\n","      <th>DeviceProtection</th>\n","      <th>TechSupport</th>\n","      <th>StreamingTV</th>\n","      <th>StreamingMovies</th>\n","      <th>Contract</th>\n","      <th>PaperlessBilling</th>\n","      <th>PaymentMethod</th>\n","      <th>MonthlyCharges</th>\n","      <th>TotalCharges</th>\n","      <th>Churn</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>3970</th>\n","      <td>2541-YGPKE</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>42</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>DSL</td>\n","      <td>Yes</td>\n","      <td>...</td>\n","      <td>No</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>Yes</td>\n","      <td>One year</td>\n","      <td>No</td>\n","      <td>Credit card (automatic)</td>\n","      <td>63.70</td>\n","      <td>2763.35</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>5763</th>\n","      <td>9633-XQABV</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>3</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>Fiber optic</td>\n","      <td>No</td>\n","      <td>...</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Month-to-month</td>\n","      <td>Yes</td>\n","      <td>Electronic check</td>\n","      <td>70.25</td>\n","      <td>229.7</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>3000</th>\n","      <td>7613-LLQFO</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>12</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>Fiber optic</td>\n","      <td>No</td>\n","      <td>...</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>Month-to-month</td>\n","      <td>Yes</td>\n","      <td>Electronic check</td>\n","      <td>84.45</td>\n","      <td>1059.55</td>\n","      <td>Yes</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>3 rows × 21 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-eb78ba17-c1e3-42ad-9443-8a6fd3d9034a')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-4a7e0242-b997-47cd-9ae7-e906bfd85e64\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4a7e0242-b997-47cd-9ae7-e906bfd85e64')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-4a7e0242-b997-47cd-9ae7-e906bfd85e64 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-eb78ba17-c1e3-42ad-9443-8a6fd3d9034a button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-eb78ba17-c1e3-42ad-9443-8a6fd3d9034a');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":3}]},{"cell_type":"markdown","source":["# EDA Step 1 - Gathering information, Data Cleaning"],"metadata":{"id":"1k6K3ThWjihQ"}},{"cell_type":"code","source":["# General Information\n","\n","telco.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"59-psrEySkhC","executionInfo":{"status":"ok","timestamp":1690866049759,"user_tz":-420,"elapsed":694,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"0c6f6d0e-944a-46ad-9724-0638ba49089e"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 7043 entries, 0 to 7042\n","Data columns (total 21 columns):\n"," #   Column            Non-Null Count  Dtype  \n","---  ------            --------------  -----  \n"," 0   customerID        7043 non-null   object \n"," 1   gender            7043 non-null   object \n"," 2   SeniorCitizen     7043 non-null   int64  \n"," 3   Partner           7043 non-null   object \n"," 4   Dependents        7043 non-null   object \n"," 5   tenure            7043 non-null   int64  \n"," 6   PhoneService      7043 non-null   object \n"," 7   MultipleLines     7043 non-null   object \n"," 8   InternetService   7043 non-null   object \n"," 9   OnlineSecurity    7043 non-null   object \n"," 10  OnlineBackup      7043 non-null   object \n"," 11  DeviceProtection  7043 non-null   object \n"," 12  TechSupport       7043 non-null   object \n"," 13  StreamingTV       7043 non-null   object \n"," 14  StreamingMovies   7043 non-null   object \n"," 15  Contract          7043 non-null   object \n"," 16  PaperlessBilling  7043 non-null   object \n"," 17  PaymentMethod     7043 non-null   object \n"," 18  MonthlyCharges    7043 non-null   float64\n"," 19  TotalCharges      7043 non-null   object \n"," 20  Churn             7043 non-null   object \n","dtypes: float64(1), int64(2), object(18)\n","memory usage: 1.1+ MB\n"]}]},{"cell_type":"code","source":["# Check Missing Data\n","\n","telco.isna().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FXOn99QnvxmZ","executionInfo":{"status":"ok","timestamp":1690866075685,"user_tz":-420,"elapsed":586,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"89b89dfc-5705-4fd6-c29d-ac9af4fb21bb"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["customerID          0\n","gender              0\n","SeniorCitizen       0\n","Partner             0\n","Dependents          0\n","tenure              0\n","PhoneService        0\n","MultipleLines       0\n","InternetService     0\n","OnlineSecurity      0\n","OnlineBackup        0\n","DeviceProtection    0\n","TechSupport         0\n","StreamingTV         0\n","StreamingMovies     0\n","Contract            0\n","PaperlessBilling    0\n","PaymentMethod       0\n","MonthlyCharges      0\n","TotalCharges        0\n","Churn               0\n","dtype: int64"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["telco.isna().sum() * 100 / len(telco)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8OpLHYhEwb9l","executionInfo":{"status":"ok","timestamp":1690866082679,"user_tz":-420,"elapsed":348,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"3e8b15da-0758-431f-d920-8aa4ced73366"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["customerID          0.0\n","gender              0.0\n","SeniorCitizen       0.0\n","Partner             0.0\n","Dependents          0.0\n","tenure              0.0\n","PhoneService        0.0\n","MultipleLines       0.0\n","InternetService     0.0\n","OnlineSecurity      0.0\n","OnlineBackup        0.0\n","DeviceProtection    0.0\n","TechSupport         0.0\n","StreamingTV         0.0\n","StreamingMovies     0.0\n","Contract            0.0\n","PaperlessBilling    0.0\n","PaymentMethod       0.0\n","MonthlyCharges      0.0\n","TotalCharges        0.0\n","Churn               0.0\n","dtype: float64"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["# Check Duplicated Data\n","\n","telco.duplicated().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6Gk1vWasTKn6","executionInfo":{"status":"ok","timestamp":1690866088542,"user_tz":-420,"elapsed":520,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"b135d4fc-4980-415d-d577-bb438e2cb93f"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0"]},"metadata":{},"execution_count":8}]},{"cell_type":"markdown","source":["# EDA Step 2 - Data Understanding\n","\n","\n"],"metadata":{"id":"3guRHV24DEjV"}},{"cell_type":"code","source":["telco.sample(3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":289},"id":"46tGx1ZHxyDp","executionInfo":{"status":"ok","timestamp":1690866091782,"user_tz":-420,"elapsed":541,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"22d7fc08-ee33-4525-c582-90a1e52b2b79"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      customerID  gender  SeniorCitizen Partner Dependents  tenure  \\\n","4547  5339-TJFEK    Male              0     Yes        Yes      62   \n","6207  6769-DYBQN    Male              1      No         No      46   \n","940   0835-DUUIQ  Female              0      No        Yes      24   \n","\n","     PhoneService MultipleLines InternetService       OnlineSecurity  ...  \\\n","4547          Yes           Yes     Fiber optic                  Yes  ...   \n","6207          Yes            No     Fiber optic                  Yes  ...   \n","940           Yes            No              No  No internet service  ...   \n","\n","         DeviceProtection          TechSupport          StreamingTV  \\\n","4547                   No                   No                  Yes   \n","6207                   No                   No                   No   \n","940   No internet service  No internet service  No internet service   \n","\n","          StreamingMovies        Contract PaperlessBilling  \\\n","4547                  Yes  Month-to-month              Yes   \n","6207                  Yes  Month-to-month               No   \n","940   No internet service        One year               No   \n","\n","                  PaymentMethod MonthlyCharges  TotalCharges Churn  \n","4547           Electronic check         105.50        6487.2    No  \n","6207           Electronic check          85.00        3969.4   Yes  \n","940   Bank transfer (automatic)          21.05        531.55    No  \n","\n","[3 rows x 21 columns]"],"text/html":["\n","\n","  <div id=\"df-636cd771-63fd-49c9-b7eb-1702bcb10a89\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>customerID</th>\n","      <th>gender</th>\n","      <th>SeniorCitizen</th>\n","      <th>Partner</th>\n","      <th>Dependents</th>\n","      <th>tenure</th>\n","      <th>PhoneService</th>\n","      <th>MultipleLines</th>\n","      <th>InternetService</th>\n","      <th>OnlineSecurity</th>\n","      <th>...</th>\n","      <th>DeviceProtection</th>\n","      <th>TechSupport</th>\n","      <th>StreamingTV</th>\n","      <th>StreamingMovies</th>\n","      <th>Contract</th>\n","      <th>PaperlessBilling</th>\n","      <th>PaymentMethod</th>\n","      <th>MonthlyCharges</th>\n","      <th>TotalCharges</th>\n","      <th>Churn</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>4547</th>\n","      <td>5339-TJFEK</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>62</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>Fiber optic</td>\n","      <td>Yes</td>\n","      <td>...</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>Month-to-month</td>\n","      <td>Yes</td>\n","      <td>Electronic check</td>\n","      <td>105.50</td>\n","      <td>6487.2</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>6207</th>\n","      <td>6769-DYBQN</td>\n","      <td>Male</td>\n","      <td>1</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>46</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>Fiber optic</td>\n","      <td>Yes</td>\n","      <td>...</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Yes</td>\n","      <td>Month-to-month</td>\n","      <td>No</td>\n","      <td>Electronic check</td>\n","      <td>85.00</td>\n","      <td>3969.4</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>940</th>\n","      <td>0835-DUUIQ</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>Yes</td>\n","      <td>24</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No internet service</td>\n","      <td>...</td>\n","      <td>No internet service</td>\n","      <td>No internet service</td>\n","      <td>No internet service</td>\n","      <td>No internet service</td>\n","      <td>One year</td>\n","      <td>No</td>\n","      <td>Bank transfer (automatic)</td>\n","      <td>21.05</td>\n","      <td>531.55</td>\n","      <td>No</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>3 rows × 21 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-636cd771-63fd-49c9-b7eb-1702bcb10a89')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-241e8d15-8b1d-406b-aa63-70b47580a6ec\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-241e8d15-8b1d-406b-aa63-70b47580a6ec')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-241e8d15-8b1d-406b-aa63-70b47580a6ec button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-636cd771-63fd-49c9-b7eb-1702bcb10a89 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-636cd771-63fd-49c9-b7eb-1702bcb10a89');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["### Statical Summary\n","\n","categorical = ['Partner', 'Dependents', 'gender', 'Churn']\n","\n","services = ['PhoneService', 'InternetService', 'MultipleLines' ,'StreamingTV', 'StreamingMovies', 'OnlineSecurity' , 'DeviceProtection']\n","\n","payment = ['Contract', 'PaperlessBilling', 'PaymentMethod']\n","\n","number = ['tenure', 'MonthlyCharges', 'TotalCharges']"],"metadata":{"id":"VQxULmcKbWT7","executionInfo":{"status":"ok","timestamp":1690866096341,"user_tz":-420,"elapsed":933,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["telco[categorical].describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"K_RsBhLYut7l","executionInfo":{"status":"ok","timestamp":1690866100015,"user_tz":-420,"elapsed":332,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"93cf9709-24a0-41af-e482-8de9594a9054"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Partner Dependents gender Churn\n","count     7043       7043   7043  7043\n","unique       2          2      2     2\n","top         No         No   Male    No\n","freq      3641       4933   3555  5174"],"text/html":["\n","\n","  <div id=\"df-1dd41132-72e7-4669-a6ac-187d132082d0\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Partner</th>\n","      <th>Dependents</th>\n","      <th>gender</th>\n","      <th>Churn</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>7043</td>\n","      <td>7043</td>\n","      <td>7043</td>\n","      <td>7043</td>\n","    </tr>\n","    <tr>\n","      <th>unique</th>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>top</th>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Male</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>freq</th>\n","      <td>3641</td>\n","      <td>4933</td>\n","      <td>3555</td>\n","      <td>5174</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1dd41132-72e7-4669-a6ac-187d132082d0')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-8a832eb5-0afc-4338-8a79-965f7f1e44dc\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8a832eb5-0afc-4338-8a79-965f7f1e44dc')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-8a832eb5-0afc-4338-8a79-965f7f1e44dc button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-1dd41132-72e7-4669-a6ac-187d132082d0 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-1dd41132-72e7-4669-a6ac-187d132082d0');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["telco[services].describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":239},"id":"ywkZscWPy6Co","executionInfo":{"status":"ok","timestamp":1690866104530,"user_tz":-420,"elapsed":565,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"0d4ac361-efcb-4f09-e5ca-53e721b2c98c"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       PhoneService InternetService MultipleLines StreamingTV StreamingMovies  \\\n","count          7043            7043          7043        7043            7043   \n","unique            2               3             3           3               3   \n","top             Yes     Fiber optic            No          No              No   \n","freq           6361            3096          3390        2810            2785   \n","\n","       OnlineSecurity DeviceProtection  \n","count            7043             7043  \n","unique              3                3  \n","top                No               No  \n","freq             3498             3095  "],"text/html":["\n","\n","  <div id=\"df-1ca1dbfb-83da-4c8d-b6c1-78a306dc5017\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PhoneService</th>\n","      <th>InternetService</th>\n","      <th>MultipleLines</th>\n","      <th>StreamingTV</th>\n","      <th>StreamingMovies</th>\n","      <th>OnlineSecurity</th>\n","      <th>DeviceProtection</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>7043</td>\n","      <td>7043</td>\n","      <td>7043</td>\n","      <td>7043</td>\n","      <td>7043</td>\n","      <td>7043</td>\n","      <td>7043</td>\n","    </tr>\n","    <tr>\n","      <th>unique</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>top</th>\n","      <td>Yes</td>\n","      <td>Fiber optic</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>freq</th>\n","      <td>6361</td>\n","      <td>3096</td>\n","      <td>3390</td>\n","      <td>2810</td>\n","      <td>2785</td>\n","      <td>3498</td>\n","      <td>3095</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1ca1dbfb-83da-4c8d-b6c1-78a306dc5017')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-3d28f9af-8370-4576-8047-1dbcc1521ced\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3d28f9af-8370-4576-8047-1dbcc1521ced')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-3d28f9af-8370-4576-8047-1dbcc1521ced button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-1ca1dbfb-83da-4c8d-b6c1-78a306dc5017 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-1ca1dbfb-83da-4c8d-b6c1-78a306dc5017');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["telco[payment].describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"3PQp_2XCy_QA","executionInfo":{"status":"ok","timestamp":1690866107954,"user_tz":-420,"elapsed":15,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"ec6e8716-3266-4ab0-f75a-e785bd9d15e8"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              Contract PaperlessBilling     PaymentMethod\n","count             7043             7043              7043\n","unique               3                2                 4\n","top     Month-to-month              Yes  Electronic check\n","freq              3875             4171              2365"],"text/html":["\n","\n","  <div id=\"df-542a0483-0677-45d6-8c6e-8f39690e3d03\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Contract</th>\n","      <th>PaperlessBilling</th>\n","      <th>PaymentMethod</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>7043</td>\n","      <td>7043</td>\n","      <td>7043</td>\n","    </tr>\n","    <tr>\n","      <th>unique</th>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>top</th>\n","      <td>Month-to-month</td>\n","      <td>Yes</td>\n","      <td>Electronic check</td>\n","    </tr>\n","    <tr>\n","      <th>freq</th>\n","      <td>3875</td>\n","      <td>4171</td>\n","      <td>2365</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-542a0483-0677-45d6-8c6e-8f39690e3d03')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-c0978b06-4c32-435a-bc47-0da20d17904d\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c0978b06-4c32-435a-bc47-0da20d17904d')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-c0978b06-4c32-435a-bc47-0da20d17904d button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-542a0483-0677-45d6-8c6e-8f39690e3d03 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-542a0483-0677-45d6-8c6e-8f39690e3d03');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":13}]},{"cell_type":"markdown","source":["###we may infer that the feature 'TotalCharges' has some missing values. some of data value 'NAN', so the Dtype = object as string. We have to convert numerical / int. So we can calculate."],"metadata":{"id":"YoSxVczcxJBD"}},{"cell_type":"code","source":["telco[number].describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"k2hlN9fezE73","executionInfo":{"status":"ok","timestamp":1690866125780,"user_tz":-420,"elapsed":14,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"ef779559-9d41-46af-c3fd-e476a2414358"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            tenure  MonthlyCharges  TotalCharges\n","count  7043.000000     7043.000000   7032.000000\n","mean     32.371149       64.761692   2283.300537\n","std      24.559481       30.090047   2266.771484\n","min       0.000000       18.250000     18.799999\n","25%       9.000000       35.500000    401.450012\n","50%      29.000000       70.350000   1397.475098\n","75%      55.000000       89.850000   3794.737549\n","max      72.000000      118.750000   8684.799805"],"text/html":["\n","\n","  <div id=\"df-38c8341c-936d-4275-af87-1a337f192f97\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>tenure</th>\n","      <th>MonthlyCharges</th>\n","      <th>TotalCharges</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>7043.000000</td>\n","      <td>7043.000000</td>\n","      <td>7032.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>32.371149</td>\n","      <td>64.761692</td>\n","      <td>2283.300537</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>24.559481</td>\n","      <td>30.090047</td>\n","      <td>2266.771484</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>18.250000</td>\n","      <td>18.799999</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>9.000000</td>\n","      <td>35.500000</td>\n","      <td>401.450012</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>29.000000</td>\n","      <td>70.350000</td>\n","      <td>1397.475098</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>55.000000</td>\n","      <td>89.850000</td>\n","      <td>3794.737549</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>72.000000</td>\n","      <td>118.750000</td>\n","      <td>8684.799805</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-38c8341c-936d-4275-af87-1a337f192f97')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-59e0c317-644a-45e0-a502-d2be4bf8dbc9\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-59e0c317-644a-45e0-a502-d2be4bf8dbc9')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-59e0c317-644a-45e0-a502-d2be4bf8dbc9 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-38c8341c-936d-4275-af87-1a337f192f97 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-38c8341c-936d-4275-af87-1a337f192f97');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["telco['TotalCharges'].value_counts"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VBSuKg-EwtbL","executionInfo":{"status":"ok","timestamp":1690866115770,"user_tz":-420,"elapsed":474,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"3cb5f163-3f4a-4cfc-ed20-5158c22dfc79"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<bound method IndexOpsMixin.value_counts of 0         29.85\n","1        1889.5\n","2        108.15\n","3       1840.75\n","4        151.65\n","         ...   \n","7038     1990.5\n","7039     7362.9\n","7040     346.45\n","7041      306.6\n","7042     6844.5\n","Name: TotalCharges, Length: 7043, dtype: object>"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["telco['TotalCharges'].describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZxesY9P0zOny","executionInfo":{"status":"ok","timestamp":1690866118358,"user_tz":-420,"elapsed":732,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"bd30e72b-120c-4f9a-a0d9-9360e5d655b5"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["count     7043\n","unique    6531\n","top           \n","freq        11\n","Name: TotalCharges, dtype: object"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["# converting 'TotalCharges' to numerical data type\n","\n","telco['TotalCharges'] = pd.to_numeric(telco['TotalCharges'], errors='coerce', downcast='float')"],"metadata":{"id":"PHGBAijn4khH","executionInfo":{"status":"ok","timestamp":1690866120028,"user_tz":-420,"elapsed":8,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":["telco['TotalCharges'].describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0-O1S4SH5MUF","executionInfo":{"status":"ok","timestamp":1690866121873,"user_tz":-420,"elapsed":7,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"c127185b-0166-4d16-dde8-cad21989219a"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["count    7032.000000\n","mean     2283.300537\n","std      2266.771484\n","min        18.799999\n","25%       401.450012\n","50%      1397.475098\n","75%      3794.737549\n","max      8684.799805\n","Name: TotalCharges, dtype: float64"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["# 2. Target Analysis : Customer Churn\n","\n","Churn_check = telco.groupby('Churn',as_index=False).size().sort_values(['size'],ascending = False).reset_index(drop = True)\n","Churn_check"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"bLKofA9ggi3M","executionInfo":{"status":"ok","timestamp":1690866173888,"user_tz":-420,"elapsed":342,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"8d64d892-98b4-4446-fa1c-8c79bb25735c"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Churn  size\n","0    No  5174\n","1   Yes  1869"],"text/html":["\n","\n","  <div id=\"df-0b11d890-f7ca-4c2d-9fa5-fa951328dd6e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Churn</th>\n","      <th>size</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>No</td>\n","      <td>5174</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Yes</td>\n","      <td>1869</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0b11d890-f7ca-4c2d-9fa5-fa951328dd6e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-8216d7dc-62d1-4fd3-8a3e-2cebb721e0e0\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8216d7dc-62d1-4fd3-8a3e-2cebb721e0e0')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-8216d7dc-62d1-4fd3-8a3e-2cebb721e0e0 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-0b11d890-f7ca-4c2d-9fa5-fa951328dd6e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-0b11d890-f7ca-4c2d-9fa5-fa951328dd6e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["customerChurn = telco[telco['Churn'] == 'Yes']\n","customerNoChurn = telco[telco['Churn'] == 'No']"],"metadata":{"id":"FoSVmZoVh8zB","executionInfo":{"status":"ok","timestamp":1690866177664,"user_tz":-420,"elapsed":323,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}}},"execution_count":21,"outputs":[]},{"cell_type":"code","source":["total_customerChurn = len(customerChurn)\n","total_customerNoChurn = len(customerNoChurn)\n","\n","# Pie Chart\n","labels = ['Total Churn', 'Total No Churn']\n","sizes = [total_customerChurn, total_customerNoChurn]\n","colors = ['#ff5342', '#4c7d8e']\n","\n","plt.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%', startangle=90)\n","plt.axis('equal')\n","plt.title('Ratio of Telco Customer Churn')\n","\n","plt.show()"],"metadata":{"id":"dBik_J42c1hi","colab":{"base_uri":"https://localhost:8080/","height":428},"executionInfo":{"status":"ok","timestamp":1690866180001,"user_tz":-420,"elapsed":1027,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"77858ce8-630a-4c61-907e-a3abf89cc62f"},"execution_count":22,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# 3. gender column\n","\n","# gender column shown that total customer by gender is equal\n","\n","seniorcitizen_count = telco.groupby('gender',as_index=False).size()\n","seniorcitizen_count"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"pg41UxDEyjuH","executionInfo":{"status":"ok","timestamp":1690866184421,"user_tz":-420,"elapsed":328,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"eb922ca1-5c29-42bd-ccda-ffc80cbadb13"},"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   gender  size\n","0  Female  3488\n","1    Male  3555"],"text/html":["\n","\n","  <div id=\"df-4b5a2685-9442-4355-980c-a2216aab33e3\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>gender</th>\n","      <th>size</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Female</td>\n","      <td>3488</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Male</td>\n","      <td>3555</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4b5a2685-9442-4355-980c-a2216aab33e3')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-92983f03-9267-4802-b28a-f401ed2e6ca4\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-92983f03-9267-4802-b28a-f401ed2e6ca4')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-92983f03-9267-4802-b28a-f401ed2e6ca4 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-4b5a2685-9442-4355-980c-a2216aab33e3 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-4b5a2685-9442-4355-980c-a2216aab33e3');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["# 4. senior citizen column\n","\n","seniorcitizen_count = telco.groupby('SeniorCitizen',as_index=False).size()\n","seniorcitizen_count"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"cLmweF7os1WY","executionInfo":{"status":"ok","timestamp":1690866187040,"user_tz":-420,"elapsed":13,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"f47fa3f3-2c45-4ccf-9392-e8621ae1e11a"},"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   SeniorCitizen  size\n","0              0  5901\n","1              1  1142"],"text/html":["\n","\n","  <div id=\"df-f40443d6-c46d-4c65-8b19-ae1d90853f0b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>SeniorCitizen</th>\n","      <th>size</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>5901</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1142</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f40443d6-c46d-4c65-8b19-ae1d90853f0b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-6fc9a1a7-033a-4009-860a-bd34c888428c\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6fc9a1a7-033a-4009-860a-bd34c888428c')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-6fc9a1a7-033a-4009-860a-bd34c888428c button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f40443d6-c46d-4c65-8b19-ae1d90853f0b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f40443d6-c46d-4c65-8b19-ae1d90853f0b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["customerSenior = telco[telco['SeniorCitizen'] == 1]\n","customerYounger = telco[telco['SeniorCitizen'] == 0]"],"metadata":{"id":"LiBS0PbRdiTi","executionInfo":{"status":"ok","timestamp":1690866189450,"user_tz":-420,"elapsed":324,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}}},"execution_count":25,"outputs":[]},{"cell_type":"code","source":["total_customerSenior = len(customerSenior)\n","total_customerYounger = len(customerYounger)\n","\n","# Pie Chart\n","labels = ['Customer Senior', 'Customer Non Senior / Young']\n","sizes = [total_customerSenior, total_customerYounger]\n","colors = ['#ff5342', '#4c7d8e']\n","\n","plt.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%', startangle=90)\n","plt.axis('equal')\n","plt.title('Percentage of Senior / Non-Senior Citizenship')\n","\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":428},"id":"swmKa5eBk1w9","executionInfo":{"status":"ok","timestamp":1690866190362,"user_tz":-420,"elapsed":14,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"54a4e7fc-c6fa-4717-81aa-35eba465dd1f"},"execution_count":26,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# retrieve customer churn & senior citizen\n","\n","observation_1 = telco[(telco['Churn'] == 'Yes')&(telco['SeniorCitizen'] == 1)]"],"metadata":{"id":"nsplUU7t31oU","executionInfo":{"status":"ok","timestamp":1690866194033,"user_tz":-420,"elapsed":2,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}}},"execution_count":27,"outputs":[]},{"cell_type":"code","source":["observation_1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":661},"id":"o8XWQKF45Tpr","executionInfo":{"status":"ok","timestamp":1690866194447,"user_tz":-420,"elapsed":12,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"e14de5ed-920c-430b-b6dd-43ea8fdd0d43"},"execution_count":28,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      customerID  gender  SeniorCitizen Partner Dependents  tenure  \\\n","20    8779-QRDMV    Male              1      No         No       1   \n","53    7495-OOKFY  Female              1     Yes         No       8   \n","55    1658-BYGOY    Male              1      No         No      18   \n","99    4598-XLKNJ  Female              1     Yes         No      25   \n","113   4846-WHAFZ  Female              1     Yes         No      37   \n","...          ...     ...            ...     ...        ...     ...   \n","6993  6583-QGCSI  Female              1     Yes         No      50   \n","7008  1980-KXVPM  Female              1      No         No       3   \n","7010  0723-DRCLG  Female              1     Yes         No       1   \n","7032  6894-LFHLY    Male              1      No         No       1   \n","7041  8361-LTMKD    Male              1     Yes         No       4   \n","\n","     PhoneService     MultipleLines InternetService OnlineSecurity  ...  \\\n","20             No  No phone service             DSL             No  ...   \n","53            Yes               Yes     Fiber optic             No  ...   \n","55            Yes               Yes     Fiber optic             No  ...   \n","99            Yes                No     Fiber optic             No  ...   \n","113           Yes               Yes     Fiber optic             No  ...   \n","...           ...               ...             ...            ...  ...   \n","6993          Yes               Yes     Fiber optic             No  ...   \n","7008          Yes               Yes     Fiber optic             No  ...   \n","7010          Yes               Yes     Fiber optic             No  ...   \n","7032          Yes               Yes     Fiber optic             No  ...   \n","7041          Yes               Yes     Fiber optic             No  ...   \n","\n","     DeviceProtection TechSupport StreamingTV StreamingMovies        Contract  \\\n","20                Yes          No          No             Yes  Month-to-month   \n","53                 No          No          No              No  Month-to-month   \n","55                 No          No         Yes             Yes  Month-to-month   \n","99                Yes          No         Yes             Yes  Month-to-month   \n","113                No          No          No              No  Month-to-month   \n","...               ...         ...         ...             ...             ...   \n","6993               No          No         Yes              No  Month-to-month   \n","7008               No          No          No              No  Month-to-month   \n","7010               No          No          No              No  Month-to-month   \n","7032               No          No          No              No  Month-to-month   \n","7041               No          No          No              No  Month-to-month   \n","\n","     PaperlessBilling            PaymentMethod MonthlyCharges  TotalCharges  \\\n","20                Yes         Electronic check          39.65     39.650002   \n","53                Yes  Credit card (automatic)          80.65    633.299988   \n","55                Yes         Electronic check          95.45   1752.550049   \n","99                Yes         Electronic check          98.50   2514.500000   \n","113               Yes         Electronic check          76.50   2868.149902   \n","...               ...                      ...            ...           ...   \n","6993              Yes         Electronic check          88.05   4367.350098   \n","7008              Yes  Credit card (automatic)          75.05    256.250000   \n","7010              Yes         Electronic check          74.45     74.449997   \n","7032              Yes         Electronic check          75.75     75.750000   \n","7041              Yes             Mailed check          74.40    306.600006   \n","\n","      Churn  \n","20      Yes  \n","53      Yes  \n","55      Yes  \n","99      Yes  \n","113     Yes  \n","...     ...  \n","6993    Yes  \n","7008    Yes  \n","7010    Yes  \n","7032    Yes  \n","7041    Yes  \n","\n","[476 rows x 21 columns]"],"text/html":["\n","\n","  <div id=\"df-4d5350d0-a3bc-4f16-b8ea-e7790e300fd5\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>customerID</th>\n","      <th>gender</th>\n","      <th>SeniorCitizen</th>\n","      <th>Partner</th>\n","      <th>Dependents</th>\n","      <th>tenure</th>\n","      <th>PhoneService</th>\n","      <th>MultipleLines</th>\n","      <th>InternetService</th>\n","      <th>OnlineSecurity</th>\n","      <th>...</th>\n","      <th>DeviceProtection</th>\n","      <th>TechSupport</th>\n","      <th>StreamingTV</th>\n","      <th>StreamingMovies</th>\n","      <th>Contract</th>\n","      <th>PaperlessBilling</th>\n","      <th>PaymentMethod</th>\n","      <th>MonthlyCharges</th>\n","      <th>TotalCharges</th>\n","      <th>Churn</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>20</th>\n","      <td>8779-QRDMV</td>\n","      <td>Male</td>\n","      <td>1</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>1</td>\n","      <td>No</td>\n","      <td>No phone service</td>\n","      <td>DSL</td>\n","      <td>No</td>\n","      <td>...</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Yes</td>\n","      <td>Month-to-month</td>\n","      <td>Yes</td>\n","      <td>Electronic check</td>\n","      <td>39.65</td>\n","      <td>39.650002</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>53</th>\n","      <td>7495-OOKFY</td>\n","      <td>Female</td>\n","      <td>1</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>8</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>Fiber optic</td>\n","      <td>No</td>\n","      <td>...</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Month-to-month</td>\n","      <td>Yes</td>\n","      <td>Credit card (automatic)</td>\n","      <td>80.65</td>\n","      <td>633.299988</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>55</th>\n","      <td>1658-BYGOY</td>\n","      <td>Male</td>\n","      <td>1</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>18</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>Fiber optic</td>\n","      <td>No</td>\n","      <td>...</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>Month-to-month</td>\n","      <td>Yes</td>\n","      <td>Electronic check</td>\n","      <td>95.45</td>\n","      <td>1752.550049</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>99</th>\n","      <td>4598-XLKNJ</td>\n","      <td>Female</td>\n","      <td>1</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>25</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>Fiber optic</td>\n","      <td>No</td>\n","      <td>...</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>Month-to-month</td>\n","      <td>Yes</td>\n","      <td>Electronic check</td>\n","      <td>98.50</td>\n","      <td>2514.500000</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>113</th>\n","      <td>4846-WHAFZ</td>\n","      <td>Female</td>\n","      <td>1</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>37</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>Fiber optic</td>\n","      <td>No</td>\n","      <td>...</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Month-to-month</td>\n","      <td>Yes</td>\n","      <td>Electronic check</td>\n","      <td>76.50</td>\n","      <td>2868.149902</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>6993</th>\n","      <td>6583-QGCSI</td>\n","      <td>Female</td>\n","      <td>1</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>50</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>Fiber optic</td>\n","      <td>No</td>\n","      <td>...</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>Month-to-month</td>\n","      <td>Yes</td>\n","      <td>Electronic check</td>\n","      <td>88.05</td>\n","      <td>4367.350098</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>7008</th>\n","      <td>1980-KXVPM</td>\n","      <td>Female</td>\n","      <td>1</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>3</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>Fiber optic</td>\n","      <td>No</td>\n","      <td>...</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Month-to-month</td>\n","      <td>Yes</td>\n","      <td>Credit card (automatic)</td>\n","      <td>75.05</td>\n","      <td>256.250000</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>7010</th>\n","      <td>0723-DRCLG</td>\n","      <td>Female</td>\n","      <td>1</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>1</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>Fiber optic</td>\n","      <td>No</td>\n","      <td>...</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Month-to-month</td>\n","      <td>Yes</td>\n","      <td>Electronic check</td>\n","      <td>74.45</td>\n","      <td>74.449997</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>7032</th>\n","      <td>6894-LFHLY</td>\n","      <td>Male</td>\n","      <td>1</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>1</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>Fiber optic</td>\n","      <td>No</td>\n","      <td>...</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Month-to-month</td>\n","      <td>Yes</td>\n","      <td>Electronic check</td>\n","      <td>75.75</td>\n","      <td>75.750000</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>7041</th>\n","      <td>8361-LTMKD</td>\n","      <td>Male</td>\n","      <td>1</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>4</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>Fiber optic</td>\n","      <td>No</td>\n","      <td>...</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Month-to-month</td>\n","      <td>Yes</td>\n","      <td>Mailed check</td>\n","      <td>74.40</td>\n","      <td>306.600006</td>\n","      <td>Yes</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>476 rows × 21 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4d5350d0-a3bc-4f16-b8ea-e7790e300fd5')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-039fe269-6172-41f5-b179-82614fec32b9\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-039fe269-6172-41f5-b179-82614fec32b9')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-039fe269-6172-41f5-b179-82614fec32b9 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-4d5350d0-a3bc-4f16-b8ea-e7790e300fd5 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-4d5350d0-a3bc-4f16-b8ea-e7790e300fd5');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["observation_2 = telco[(telco['Churn'] == 'Yes')&(telco['SeniorCitizen'] == 0)]"],"metadata":{"id":"ItiyFHU25LXc","executionInfo":{"status":"ok","timestamp":1690866200712,"user_tz":-420,"elapsed":317,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}}},"execution_count":29,"outputs":[]},{"cell_type":"code","source":["observation_2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":661},"id":"BsdNQLfl5cRY","executionInfo":{"status":"ok","timestamp":1690866201935,"user_tz":-420,"elapsed":570,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"82e7787a-7e19-4341-b39a-5e29b8bbb4b8"},"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      customerID  gender  SeniorCitizen Partner Dependents  tenure  \\\n","2     3668-QPYBK    Male              0      No         No       2   \n","4     9237-HQITU  Female              0      No         No       2   \n","5     9305-CDSKC  Female              0      No         No       8   \n","8     7892-POOKP  Female              0     Yes         No      28   \n","13    0280-XJGEX    Male              0      No         No      49   \n","...          ...     ...            ...     ...        ...     ...   \n","7011  5482-NUPNA  Female              0      No         No       4   \n","7018  1122-JWTJW    Male              0     Yes        Yes       1   \n","7021  1699-HPSBG    Male              0      No         No      12   \n","7026  8775-CEBBJ  Female              0      No         No       9   \n","7034  0639-TSIQW  Female              0      No         No      67   \n","\n","     PhoneService MultipleLines InternetService OnlineSecurity  ...  \\\n","2             Yes            No             DSL            Yes  ...   \n","4             Yes            No     Fiber optic             No  ...   \n","5             Yes           Yes     Fiber optic             No  ...   \n","8             Yes           Yes     Fiber optic             No  ...   \n","13            Yes           Yes     Fiber optic             No  ...   \n","...           ...           ...             ...            ...  ...   \n","7011          Yes            No             DSL            Yes  ...   \n","7018          Yes            No     Fiber optic             No  ...   \n","7021          Yes            No             DSL             No  ...   \n","7026          Yes            No             DSL             No  ...   \n","7034          Yes           Yes     Fiber optic            Yes  ...   \n","\n","     DeviceProtection TechSupport StreamingTV StreamingMovies        Contract  \\\n","2                  No          No          No              No  Month-to-month   \n","4                  No          No          No              No  Month-to-month   \n","5                 Yes          No         Yes             Yes  Month-to-month   \n","8                 Yes         Yes         Yes             Yes  Month-to-month   \n","13                Yes          No         Yes             Yes  Month-to-month   \n","...               ...         ...         ...             ...             ...   \n","7011               No         Yes          No              No  Month-to-month   \n","7018               No          No          No              No  Month-to-month   \n","7021               No         Yes         Yes              No        One year   \n","7026               No          No          No              No  Month-to-month   \n","7034              Yes          No         Yes              No  Month-to-month   \n","\n","     PaperlessBilling              PaymentMethod MonthlyCharges  TotalCharges  \\\n","2                 Yes               Mailed check          53.85    108.150002   \n","4                 Yes           Electronic check          70.70    151.649994   \n","5                 Yes           Electronic check          99.65    820.500000   \n","8                 Yes           Electronic check         104.80   3046.050049   \n","13                Yes  Bank transfer (automatic)         103.70   5036.299805   \n","...               ...                        ...            ...           ...   \n","7011              Yes               Mailed check          60.40    272.149994   \n","7018              Yes               Mailed check          70.65     70.650002   \n","7021              Yes           Electronic check          59.80    727.799988   \n","7026              Yes  Bank transfer (automatic)          44.20    403.350006   \n","7034              Yes    Credit card (automatic)         102.95   6886.250000   \n","\n","      Churn  \n","2       Yes  \n","4       Yes  \n","5       Yes  \n","8       Yes  \n","13      Yes  \n","...     ...  \n","7011    Yes  \n","7018    Yes  \n","7021    Yes  \n","7026    Yes  \n","7034    Yes  \n","\n","[1393 rows x 21 columns]"],"text/html":["\n","\n","  <div id=\"df-ee10ee96-805d-4ee7-8994-437d97bd9c09\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>customerID</th>\n","      <th>gender</th>\n","      <th>SeniorCitizen</th>\n","      <th>Partner</th>\n","      <th>Dependents</th>\n","      <th>tenure</th>\n","      <th>PhoneService</th>\n","      <th>MultipleLines</th>\n","      <th>InternetService</th>\n","      <th>OnlineSecurity</th>\n","      <th>...</th>\n","      <th>DeviceProtection</th>\n","      <th>TechSupport</th>\n","      <th>StreamingTV</th>\n","      <th>StreamingMovies</th>\n","      <th>Contract</th>\n","      <th>PaperlessBilling</th>\n","      <th>PaymentMethod</th>\n","      <th>MonthlyCharges</th>\n","      <th>TotalCharges</th>\n","      <th>Churn</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2</th>\n","      <td>3668-QPYBK</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>2</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>DSL</td>\n","      <td>Yes</td>\n","      <td>...</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Month-to-month</td>\n","      <td>Yes</td>\n","      <td>Mailed check</td>\n","      <td>53.85</td>\n","      <td>108.150002</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>9237-HQITU</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>2</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>Fiber optic</td>\n","      <td>No</td>\n","      <td>...</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Month-to-month</td>\n","      <td>Yes</td>\n","      <td>Electronic check</td>\n","      <td>70.70</td>\n","      <td>151.649994</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>9305-CDSKC</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>8</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>Fiber optic</td>\n","      <td>No</td>\n","      <td>...</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>Month-to-month</td>\n","      <td>Yes</td>\n","      <td>Electronic check</td>\n","      <td>99.65</td>\n","      <td>820.500000</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>7892-POOKP</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>28</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>Fiber optic</td>\n","      <td>No</td>\n","      <td>...</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>Month-to-month</td>\n","      <td>Yes</td>\n","      <td>Electronic check</td>\n","      <td>104.80</td>\n","      <td>3046.050049</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>0280-XJGEX</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>49</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>Fiber optic</td>\n","      <td>No</td>\n","      <td>...</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>Month-to-month</td>\n","      <td>Yes</td>\n","      <td>Bank transfer (automatic)</td>\n","      <td>103.70</td>\n","      <td>5036.299805</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>7011</th>\n","      <td>5482-NUPNA</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>4</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>DSL</td>\n","      <td>Yes</td>\n","      <td>...</td>\n","      <td>No</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Month-to-month</td>\n","      <td>Yes</td>\n","      <td>Mailed check</td>\n","      <td>60.40</td>\n","      <td>272.149994</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>7018</th>\n","      <td>1122-JWTJW</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>1</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>Fiber optic</td>\n","      <td>No</td>\n","      <td>...</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Month-to-month</td>\n","      <td>Yes</td>\n","      <td>Mailed check</td>\n","      <td>70.65</td>\n","      <td>70.650002</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>7021</th>\n","      <td>1699-HPSBG</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>12</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>DSL</td>\n","      <td>No</td>\n","      <td>...</td>\n","      <td>No</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>One year</td>\n","      <td>Yes</td>\n","      <td>Electronic check</td>\n","      <td>59.80</td>\n","      <td>727.799988</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>7026</th>\n","      <td>8775-CEBBJ</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>9</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>DSL</td>\n","      <td>No</td>\n","      <td>...</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Month-to-month</td>\n","      <td>Yes</td>\n","      <td>Bank transfer (automatic)</td>\n","      <td>44.20</td>\n","      <td>403.350006</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>7034</th>\n","      <td>0639-TSIQW</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>67</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>Fiber optic</td>\n","      <td>Yes</td>\n","      <td>...</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>Month-to-month</td>\n","      <td>Yes</td>\n","      <td>Credit card (automatic)</td>\n","      <td>102.95</td>\n","      <td>6886.250000</td>\n","      <td>Yes</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1393 rows × 21 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ee10ee96-805d-4ee7-8994-437d97bd9c09')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-b5c8f85b-8425-4982-9163-7cc7b4d8e5b5\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b5c8f85b-8425-4982-9163-7cc7b4d8e5b5')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-b5c8f85b-8425-4982-9163-7cc7b4d8e5b5 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ee10ee96-805d-4ee7-8994-437d97bd9c09 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ee10ee96-805d-4ee7-8994-437d97bd9c09');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":30}]},{"cell_type":"code","source":["PhoneService = observation_2[(observation_2[\"PhoneService\"] == \"Yes\") & (observation_2[\"InternetService\"] == \"No\")]\n","InternetService = observation_2[(observation_2[\"InternetService\"] != \"Yes\") & (observation_2[\"PhoneService\"] == \"No\")]\n","MultipleService = observation_2[(observation_2[\"InternetService\"] != \"Yes\") & (observation_2[\"PhoneService\"] == \"Yes\")]\n"],"metadata":{"id":"dO5xTscX7GNA","executionInfo":{"status":"ok","timestamp":1690866210306,"user_tz":-420,"elapsed":325,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}}},"execution_count":31,"outputs":[]},{"cell_type":"code","source":["phone_service_count = len(PhoneService)\n","internet_service_count = len(InternetService)\n","multiple_service_count = len(MultipleService)"],"metadata":{"id":"g5ybkPXx7oyO","executionInfo":{"status":"ok","timestamp":1690866212251,"user_tz":-420,"elapsed":7,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}}},"execution_count":32,"outputs":[]},{"cell_type":"code","source":["labels = ['Phone Service', 'Internet Service', 'Multiple Service']\n","sizes = [phone_service_count, internet_service_count, multiple_service_count]\n","colors = ['#ff9999', '#66b3ff', '#449e71']\n","\n","plt.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%', startangle=90)\n","plt.axis('equal')\n","plt.title('Phone Service vs Internet Service')\n","\n","display(phone_service_count, internet_service_count)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":463},"id":"LbuRTH5s7sz-","executionInfo":{"status":"ok","timestamp":1690866215017,"user_tz":-420,"elapsed":379,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"d0da9046-1251-4af0-910a-69a375c8d923"},"execution_count":33,"outputs":[{"output_type":"display_data","data":{"text/plain":["108"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["126"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["telco['MonthlyCharges'].groupby(telco['Churn']).describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"oX4eajdoLUdn","executionInfo":{"status":"ok","timestamp":1690866221187,"user_tz":-420,"elapsed":328,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"78e55c25-014e-47d1-c331-0505a09973f5"},"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        count       mean        std    min    25%     50%   75%     max\n","Churn                                                                  \n","No     5174.0  61.265124  31.092648  18.25  25.10  64.425  88.4  118.75\n","Yes    1869.0  74.441332  24.666053  18.85  56.15  79.650  94.2  118.35"],"text/html":["\n","\n","  <div id=\"df-7ecf265d-d7ba-4acb-b990-d6cfbd4bc71f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","      <th>mean</th>\n","      <th>std</th>\n","      <th>min</th>\n","      <th>25%</th>\n","      <th>50%</th>\n","      <th>75%</th>\n","      <th>max</th>\n","    </tr>\n","    <tr>\n","      <th>Churn</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>No</th>\n","      <td>5174.0</td>\n","      <td>61.265124</td>\n","      <td>31.092648</td>\n","      <td>18.25</td>\n","      <td>25.10</td>\n","      <td>64.425</td>\n","      <td>88.4</td>\n","      <td>118.75</td>\n","    </tr>\n","    <tr>\n","      <th>Yes</th>\n","      <td>1869.0</td>\n","      <td>74.441332</td>\n","      <td>24.666053</td>\n","      <td>18.85</td>\n","      <td>56.15</td>\n","      <td>79.650</td>\n","      <td>94.2</td>\n","      <td>118.35</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7ecf265d-d7ba-4acb-b990-d6cfbd4bc71f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-7aeb61d4-1939-4431-969d-a98973480a8e\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7aeb61d4-1939-4431-969d-a98973480a8e')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-7aeb61d4-1939-4431-969d-a98973480a8e button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7ecf265d-d7ba-4acb-b990-d6cfbd4bc71f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7ecf265d-d7ba-4acb-b990-d6cfbd4bc71f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["telco['TotalCharges'].groupby(telco['Churn']).describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":207},"id":"1TfSTwR15boN","executionInfo":{"status":"ok","timestamp":1690866222410,"user_tz":-420,"elapsed":6,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"3c4d462b-6485-4373-bb13-74a380bc0bd3"},"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        count         mean          std        min         25%          50%  \\\n","Churn                                                                         \n","No     5163.0  2555.344238  2329.457031  18.799999  577.825012  1683.599976   \n","Yes    1869.0  1531.796143  1890.822998  18.850000  134.500000   703.549988   \n","\n","               75%          max  \n","Churn                            \n","No     4264.125000  8672.450195  \n","Yes    2331.300049  8684.799805  "],"text/html":["\n","\n","  <div id=\"df-b88f4619-4b3c-472b-9c7d-1b2d78131520\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","      <th>mean</th>\n","      <th>std</th>\n","      <th>min</th>\n","      <th>25%</th>\n","      <th>50%</th>\n","      <th>75%</th>\n","      <th>max</th>\n","    </tr>\n","    <tr>\n","      <th>Churn</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>No</th>\n","      <td>5163.0</td>\n","      <td>2555.344238</td>\n","      <td>2329.457031</td>\n","      <td>18.799999</td>\n","      <td>577.825012</td>\n","      <td>1683.599976</td>\n","      <td>4264.125000</td>\n","      <td>8672.450195</td>\n","    </tr>\n","    <tr>\n","      <th>Yes</th>\n","      <td>1869.0</td>\n","      <td>1531.796143</td>\n","      <td>1890.822998</td>\n","      <td>18.850000</td>\n","      <td>134.500000</td>\n","      <td>703.549988</td>\n","      <td>2331.300049</td>\n","      <td>8684.799805</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b88f4619-4b3c-472b-9c7d-1b2d78131520')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-ac4ffbff-bcfb-4011-b49a-b3d4228c4366\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ac4ffbff-bcfb-4011-b49a-b3d4228c4366')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-ac4ffbff-bcfb-4011-b49a-b3d4228c4366 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b88f4619-4b3c-472b-9c7d-1b2d78131520 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b88f4619-4b3c-472b-9c7d-1b2d78131520');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":35}]},{"cell_type":"markdown","source":["# EDA Step 3 : Univariate Analysis\n"],"metadata":{"id":"j3uBJbkA1C4k"}},{"cell_type":"code","source":["sns.displot(telco['MonthlyCharges'], kind = 'hist', kde = True)\n","\n","# Norm Distribution"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":523},"id":"yXmv2Ho1ZMBl","executionInfo":{"status":"ok","timestamp":1690866227799,"user_tz":-420,"elapsed":926,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"4da0d909-9834-473c-9827-aafa2ecb8a13"},"execution_count":36,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<seaborn.axisgrid.FacetGrid at 0x7af8407fb010>"]},"metadata":{},"execution_count":36},{"output_type":"display_data","data":{"text/plain":["<Figure size 500x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["sns.displot(telco['TotalCharges'], kind = 'hist', kde = True)\n","\n","# Positive Skewed"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":523},"id":"kE47EP-ZIsd-","executionInfo":{"status":"ok","timestamp":1690866231523,"user_tz":-420,"elapsed":866,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"9c6e9079-d30f-4afb-95c4-9de7f668747c"},"execution_count":37,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<seaborn.axisgrid.FacetGrid at 0x7af8407fb250>"]},"metadata":{},"execution_count":37},{"output_type":"display_data","data":{"text/plain":["<Figure size 500x500 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAekAAAHpCAYAAACmzsSXAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAABUIElEQVR4nO3deXRU9f3/8edMJjPZmAkhZIMkICKEfYe44EIKAnWlCy0o7Q/FKouKRaUqIi4oWlwolWoVWgtirUoVFWVRcEGWYGQLQdnCkgUIyZB9mfv7IzJfpgSEkGRuyOtxzj3JvZ/Pvfd9L8qLu1sMwzAQERER07H6uwARERGpmUJaRETEpBTSIiIiJqWQFhERMSmFtIiIiEkppEVERExKIS0iImJSCumzZBgGbrcbPVYuIiINRSF9lo4fP47L5eL48eP+LkVERJoIhbSIiIhJKaRFRERMSiEtIiJiUgppERERk1JIi4iImJRCWkRExKQU0iIiIialkBYRETEphbSIiIhJKaRFRERMSiEtIiJiUgppERERk1JIi4iImJRCWkRExKQU0iIiIialkBYRETEphbSIiIhJKaRFRERMyubvApqizMxMjhw5Uqt5IyMjSUhIqOOKRETEjBTSDSwzM5OOSUmUFBfXav7gkBB2pKcrqEVEmgCFdAM7cuQIJcXFjHrgWaIT2p3TvDmZu1j4zBSOHDmikBYRaQIU0n4SndCO1u07+7sMERExMd04JiIiYlIKaREREZNSSIuIiJiUQlpERMSkFNIiIiImpZAWERExKYW0iIiISSmkRURETEohLSIiYlIKaREREZNSSIuIiJiUQlpERMSkFNIiIiIm5deQXrNmDddddx1xcXFYLBaWLFlySp/09HSuv/56XC4XoaGh9O3bl8zMTG97aWkp48ePp0WLFoSFhTFixAhycnJ8lpGZmcnw4cMJCQkhKiqKKVOmUFlZWd+bJyIicl78GtJFRUV0796duXPn1ti+a9cuLr/8cjp27Mjnn3/O5s2beeSRRwgKCvL2uffee/nggw94++23Wb16NYcOHeLmm2/2tldVVTF8+HDKy8v5+uuv+cc//sGCBQuYNm1avW+fiIjI+fDr96SHDh3K0KFDT9v+0EMPMWzYMGbNmuWd1q5dO+/vBQUFvPbaayxatIhrrrkGgPnz55OUlMQ333zDgAED+PTTT9m+fTsrVqwgOjqaHj168Pjjj/PAAw8wffp07HZ7jesuKyujrKzMO+52u893c0VERM6Jaa9JezwePvzwQy655BKGDBlCVFQU/fv39zklnpqaSkVFBSkpKd5pHTt2JCEhgbVr1wKwdu1aunbtSnR0tLfPkCFDcLvdbNu27bTrnzlzJi6XyzvEx8fX/UaKiIicgWlDOjc3l8LCQp5++mmuvfZaPv30U2666SZuvvlmVq9eDUB2djZ2u53w8HCfeaOjo8nOzvb2OTmgT7SfaDudqVOnUlBQ4B32799fh1snIiLy0/x6uvtMPB4PADfccAP33nsvAD169ODrr79m3rx5XHnllfW6fofDgcPhqNd1iIiInIlpj6QjIyOx2Wx06tTJZ3pSUpL37u6YmBjKy8vJz8/36ZOTk0NMTIy3z//e7X1i/EQfERERMzJtSNvtdvr27UtGRobP9J07d5KYmAhA7969CQwMZOXKld72jIwMMjMzSU5OBiA5OZktW7aQm5vr7bN8+XKcTucp/wAQERExE7+e7i4sLOSHH37wju/Zs4e0tDQiIiJISEhgypQp/PrXv2bgwIFcffXVLFu2jA8++IDPP/8cAJfLxdixY5k8eTIRERE4nU4mTpxIcnIyAwYMAGDw4MF06tSJW265hVmzZpGdnc3DDz/M+PHjdTpbRERMza8hvXHjRq6++mrv+OTJkwEYM2YMCxYs4KabbmLevHnMnDmTSZMm0aFDB9555x0uv/xy7zzPP/88VquVESNGUFZWxpAhQ/jrX//qbQ8ICGDp0qXceeedJCcnExoaypgxY5gxY0bDbaiIiEgtWAzDMPxdRGPgdrtxuVwUFBTgdDprvZxNmzbRu3dvJs99l9btO5/TvAe+38bs8TeTmppKr169al2DiIg0Dqa9Ji0iItLUKaRFRERMSiEtIiJiUgppERERk1JIi4iImJRCWkRExKQU0iIiIialkBYRETEphbSIiIhJKaRFRERMSiEtIiJiUgppERERk1JIi4iImJRCWkRExKQU0iIiIialkBYRETEphbSIiIhJKaRFRERMSiEtIiJiUgppERERk1JIi4iImJRCWkRExKQU0iIiIialkBYRETEphbSIiIhJKaRFRERMSiEtIiJiUgppERERk1JIi4iImJRCWkRExKQU0iIiIialkBYRETEphbSIiIhJKaRFRERMSiEtIiJiUgppERERk1JIi4iImJRfQ3rNmjVcd911xMXFYbFYWLJkyWn7/uEPf8BisfDCCy/4TM/Ly2PUqFE4nU7Cw8MZO3YshYWFPn02b97MFVdcQVBQEPHx8cyaNasetkZERKRu+TWki4qK6N69O3Pnzj1jv/fee49vvvmGuLi4U9pGjRrFtm3bWL58OUuXLmXNmjWMGzfO2+52uxk8eDCJiYmkpqby7LPPMn36dF555ZU63x4REZG6ZPPnyocOHcrQoUPP2OfgwYNMnDiRTz75hOHDh/u0paens2zZMjZs2ECfPn0AmDNnDsOGDeO5554jLi6OhQsXUl5ezuuvv47dbqdz586kpaUxe/ZsnzAXERExG1Nfk/Z4PNxyyy1MmTKFzp07n9K+du1awsPDvQENkJKSgtVqZd26dd4+AwcOxG63e/sMGTKEjIwMjh07dtp1l5WV4Xa7fQYREZGGZOqQfuaZZ7DZbEyaNKnG9uzsbKKionym2Ww2IiIiyM7O9vaJjo726XNi/ESfmsycOROXy+Ud4uPjz2dTREREzplpQzo1NZUXX3yRBQsWYLFYGnz9U6dOpaCgwDvs37+/wWsQEZGmzbQh/cUXX5Cbm0tCQgI2mw2bzca+ffu47777aNOmDQAxMTHk5ub6zFdZWUleXh4xMTHePjk5OT59Toyf6FMTh8OB0+n0GURERBqSaUP6lltuYfPmzaSlpXmHuLg4pkyZwieffAJAcnIy+fn5pKameudbtWoVHo+H/v37e/usWbOGiooKb5/ly5fToUMHmjdv3rAbJSIicg78end3YWEhP/zwg3d8z549pKWlERERQUJCAi1atPDpHxgYSExMDB06dAAgKSmJa6+9lttvv5158+ZRUVHBhAkTGDlypPdxrd/+9rc89thjjB07lgceeICtW7fy4osv8vzzzzfchoqIiNSCX0N648aNXH311d7xyZMnAzBmzBgWLFhwVstYuHAhEyZMYNCgQVitVkaMGMFLL73kbXe5XHz66aeMHz+e3r17ExkZybRp0/T4lYiImJ5fQ/qqq67CMIyz7r93795TpkVERLBo0aIzztetWze++OKLcy1PRETEr0x7TVpERKSpU0iLiIiYlEJaRETEpBTSIiIiJqWQFhERMSmFtIiIiEkppEVERExKIS0iImJSCmkRERGTUkiLiIiYlEJaRETEpBTS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T2pqqrfPqlWr8Hg89O/f39tnzZo1VFRUePssX76cDh060Lx58wbaGhERkXPn15AuLCwkLS2NtLQ0oPpmsbS0NDIzM7FYLNxzzz088cQTvP/++2zZsoVbb72VuLg4brzxRgCSkpK49tpruf3221m/fj1fffUVEyZMYOTIkcTFxQHw29/+FrvdztixY9m2bRtvvfUWL774IpMnT/bTVouIiJwdvz6CtXHjRq6++mrv+IngHDNmDAsWLOD++++nqKiIcePGkZ+fz+WXX86yZcsICgryzrNw4UImTJjAoEGDsFqtjBgxgpdeesnb7nK5+PTTTxk/fjy9e/cmMjKSadOm6fErERExPb+G9FVXXYVhGKdtt1gszJgxgxkzZpy2T0REBIsWLTrjerp168YXX3xR6zpFRET8wbTXpEVERJo6hbSIiIhJKaRFRERMSiEtIiJiUrUK6YsuuoijR4+eMj0/P5+LLrrovIsSERGRWob03r17qaqqOmV6WVkZBw8ePO+iRERE5BwfwXr//fe9v3/yySe4XC7veFVVFStXrqRNmzZ1VpyIiEhTdk4hfeJNXxaLhTFjxvi0BQYG0qZNG/785z/XWXEiIiJN2TmFtMfjAarfq71hwwYiIyPrpSgRERGp5RvH9uzZU9d1iIiIyP+o9WtBV65cycqVK8nNzfUeYZ/w+uuvn3dhIiIiTV2tQvqxxx5jxowZ9OnTh9jYWCwWS13XJSIi0uTVKqTnzZvHggULuOWWW+q6HhEREflRrZ6TLi8v59JLL63rWkREROQktQrp22677Sc/DykiIiLnp1anu0tLS3nllVdYsWIF3bp1IzAw0Kd99uzZdVKciIhIU1arkN68eTM9evQAYOvWrT5tuolMRESkbtQqpD/77LO6rkNERET+hz5VKSIiYlK1OpK++uqrz3hae9WqVbUuSERERKrVKqRPXI8+oaKigrS0NLZu3XrKhzdERESkdmoV0s8//3yN06dPn05hYeF5FSQiIiLV6vSa9OjRo/XebhERkTpSpyG9du1agoKC6nKRIiIiTVatTnfffPPNPuOGYZCVlcXGjRt55JFH6qQwERGRpq5WIe1yuXzGrVYrHTp0YMaMGQwePLhOChMREWnqahXS8+fPr+s6RERE5H/UKqRPSE1NJT09HYDOnTvTs2fPOilKREREahnSubm5jBw5ks8//5zw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r7zyik+7x+MxHnnkESM6OtpwOBzGoEGDjIyMDJ8+R48eNX7zm98YYWFhhtPpNH7/+98bx48f9+nz3XffGZdffrnhcDiMVq1aGU8//XS9b5s/uN1u4+677zYSEhKMoKAg46KLLjIeeughn0elmvo+1acqRURETErXpEVERExKIS0iImJSCmkRERGTUkiLiIiYlEJaRETEpBTSIiIiJqWQFhERMSmFtIiIiEkppEXkFBaLhSVLlpzTPAsWLDjl85cicn4U0iImZrFYzjhMnz79tPPu3bsXi8VCWlpandTy2WefMWzYMFq0aEFISAidOnXivvvu4+DBg3WyfBE5lUJaxMSysrK8wwsvvIDT6fSZ9sc//rFB6vjb3/5GSkoKMTExvPPOO2zfvp158+ZRUFDAn//853pd98lfLhJpahTSIiYWExPjHVwuFxaLxTseFRXF7Nmzad26NQ6Hgx49erBs2TLvvCc++dmzZ08sFgtXXXUVABs2bOBnP/sZkZGRuFwurrzySjZt2nTaGg4cOMCkSZOYNGkSr7/+OldddRVt2rRh4MCB/P3vf2fatGk+/T/55BOSkpIICwvj2muvJSsry9t2Nuu2WCy8/PLLXH/99YSGhvLkk08C8MQTTxAVFUWzZs247bbbePDBB+nRo4fPvH//+99JSkoiKCiIjh078te//tXbVl5ezoQJE4iNjSUoKIjExETvd4tFTMvfX/gQkbMzf/58w+Vyecdnz55tOJ1O48033zR27Nhh3H///UZgYKCxc+dOwzCqP60IGCtWrDCysrKMo0ePGoZhGCtXrjTeeOMNIz093di+fbsxduxYIzo62nC73d5lA8Z7773nXQ9gHDp06CfrCwwMNFJSUowNGzYYqampRlJSkvHb3/7W2+ds1x0VFWW8/vrrxq5du4x9+/YZ//rXv4ygoCDj9ddfNzIyMozHHnvMcDqdRvfu3b3z/etf/zJiY2ONd955x9i9e7fxzjvvGBEREcaCBQsMwzCMZ5991oiPjzfWrFlj7N271/jiiy+MRYsW1erPQqShKKRFGon/Dem4uDjjySef9OnTt29f46677jIMwzD27NljAMa33357xuVWVVUZzZo1Mz744APvtJND+s477zScTudZ1QcYP/zwg3fa3Llzjejo6HNe9z333OPTr3///sb48eN9pl122WU+Id2uXbtTQvfxxx/3fid74sSJxjXXXGN4PJ6f3BYRs9DpbpFGyO12c+jQIS677DKf6Zdddhnp6elnnDcnJ4fbb7+d9u3b43K5cDqdFBYWkpmZWWN/wzCwWCxnVVdISAjt2rXzjsfGxpKbm3vO6+7Tp4/PeEZGBv369fOZdvJ4UVERu3btYuzYsYSFhXmHJ554gl27dgHwu9/9jrS0NDp06MCkSZP49NNPz2qbRPzJ5u8CRKRhjRkzhqNHj/Liiy+SmJiIw+EgOTmZ8vLyGvtfcsklFBQUkJWVRWxs7BmXHRgY6DNusVgwTvpk/dmuOzQ09Jy2qbCwEIBXX32V/v37+7QFBAQA0KtXL/bs2cPHH3/MihUr+NWvfkVKSgr/+c9/zmldIg1JR9IijZDT6SQuLo6vvvrKZ/pXX31Fp06dALDb7QBUVVWd0mfSpEkMGzaMzp0743A4OHLkyGnX9Ytf/AK73c6sWbNqbM/Pzz/rus913Sd06NCBDRs2+Ew7eTw6Opq4uDh2797NxRdf7DOcuIEOqvfbr3/9a1599VXeeust3nnnHfLy8s66fpGGpiNpkUZqypQpPProo7Rr144ePXowf/580tLSWLhwIQBRUVEEBwezbNkyWrduTVBQEC6Xi/bt2/PGG2/Qp08f3G43U6ZMITg4+LTriY+P5/nnn2fChAm43W5uvfVW2rRpw4EDB/jnP/9JWFjYWT+Gda7rPmHixIncfvvt9OnTh0svvZS33nqLzZs3c9FFF3n7PPbYY0yaNAmXy8W1115LWVkZGzdu5NixY0yePJnZs2cTGxtLz549sVqtvP3228TExOgFLGJqOpIWaaQmTZrE5MmTue++++jatSvLli3j/fffp3379gDYbDZeeukl/va3vxEXF8cNN9wAwGuvvcaxY8fo1asXt9xyC5MmTSIqKuqM67rrrrv49NNPOXjwIDfddBMdO3bktttuw+l0ntOz2rVZN8CoUaOYOnUqf/zjH72nrX/3u98RFBTk7XPbbbfx97//nfnz59O1a1euvPJKFixY4D2SbtasGbNmzaJPnz707duXvXv38tFHH2G16q9BMS+LcfIFIxGRRuJnP/sZMTExvPHGG/4uRaTe6HS3iJhecXEx8+bNY8iQIQQEBPDmm2+yYsUKli9f7u/SROqVjqRFxPRKSkq47rrr+PbbbyktLaVDhw48/PDD3Hzzzf4uTaReKaRFRERMSndMiIiImJRCWkRExKQU0iIiIialkBYRETEphbSIiIhJKaRFRERMSiEtIiJiUgppERERk/r/HjiL7fPqRlkAAAAASUVORK5CYII=\n"},"metadata":{}}]},{"cell_type":"markdown","source":[" ### arah positif skewed (ekor distribusi lebih panjang ke arah nilai-nilai positif), ini berarti bahwa kelas minoritas (klas positif) memiliki jumlah sampel yang lebih sedikit daripada kelas mayoritas (klas negatif)."],"metadata":{"id":"79me3hJbI0XG"}},{"cell_type":"code","source":["observation_3 = (telco.groupby(['Churn']).agg(avg_monthlycharge=('MonthlyCharges','mean')))"],"metadata":{"id":"4N_cC-Wh9dVJ","executionInfo":{"status":"ok","timestamp":1690866236910,"user_tz":-420,"elapsed":460,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}}},"execution_count":38,"outputs":[]},{"cell_type":"code","source":["observation_3"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"BTACzyC0-vPA","executionInfo":{"status":"ok","timestamp":1690866237370,"user_tz":-420,"elapsed":12,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"ebcf8478-117c-4dd7-b270-0b12b2ced913"},"execution_count":39,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       avg_monthlycharge\n","Churn                   \n","No             61.265124\n","Yes            74.441332"],"text/html":["\n","\n","  <div id=\"df-f374c9dd-0b32-4cc8-9d55-ece4d567b5ef\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>avg_monthlycharge</th>\n","    </tr>\n","    <tr>\n","      <th>Churn</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>No</th>\n","      <td>61.265124</td>\n","    </tr>\n","    <tr>\n","      <th>Yes</th>\n","      <td>74.441332</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f374c9dd-0b32-4cc8-9d55-ece4d567b5ef')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-950b65ac-6ff9-4484-ba26-527b9a6066b8\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-950b65ac-6ff9-4484-ba26-527b9a6066b8')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-950b65ac-6ff9-4484-ba26-527b9a6066b8 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f374c9dd-0b32-4cc8-9d55-ece4d567b5ef button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f374c9dd-0b32-4cc8-9d55-ece4d567b5ef');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":39}]},{"cell_type":"code","source":["observation_4 = (telco.groupby(['SeniorCitizen']).agg(avg_monthlycharge=('MonthlyCharges','mean')))"],"metadata":{"id":"0WPnjwrd-gtx","executionInfo":{"status":"ok","timestamp":1690866248985,"user_tz":-420,"elapsed":479,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}}},"execution_count":40,"outputs":[]},{"cell_type":"code","source":["observation_4"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"H1RdTyeW--1b","executionInfo":{"status":"ok","timestamp":1690866249301,"user_tz":-420,"elapsed":8,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"c84315c8-e93d-40d4-babe-0f46cb347628"},"execution_count":41,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               avg_monthlycharge\n","SeniorCitizen                   \n","0                      61.847441\n","1                      79.820359"],"text/html":["\n","\n","  <div id=\"df-80143a01-5656-471d-94a6-4f0c68513d40\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>avg_monthlycharge</th>\n","    </tr>\n","    <tr>\n","      <th>SeniorCitizen</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>61.847441</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>79.820359</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-80143a01-5656-471d-94a6-4f0c68513d40')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-56080fc1-2f8d-4a0e-b587-62f2c3eb61a5\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-56080fc1-2f8d-4a0e-b587-62f2c3eb61a5')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-56080fc1-2f8d-4a0e-b587-62f2c3eb61a5 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-80143a01-5656-471d-94a6-4f0c68513d40 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-80143a01-5656-471d-94a6-4f0c68513d40');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":41}]},{"cell_type":"code","source":["observation_5 = (telco.groupby(['Churn']).agg(tenure=('tenure','mean')))"],"metadata":{"id":"UnjeqIhx9uRM","executionInfo":{"status":"ok","timestamp":1690866258649,"user_tz":-420,"elapsed":487,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}}},"execution_count":42,"outputs":[]},{"cell_type":"code","source":["observation_5"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"cO_uDMpL91mv","executionInfo":{"status":"ok","timestamp":1690866259105,"user_tz":-420,"elapsed":12,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"13782d04-72ab-4538-f777-058c24ab1a70"},"execution_count":43,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          tenure\n","Churn           \n","No     37.569965\n","Yes    17.979133"],"text/html":["\n","\n","  <div id=\"df-7b7cf2dd-7a01-47b6-85c4-1724331b2dd3\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>tenure</th>\n","    </tr>\n","    <tr>\n","      <th>Churn</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>No</th>\n","      <td>37.569965</td>\n","    </tr>\n","    <tr>\n","      <th>Yes</th>\n","      <td>17.979133</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7b7cf2dd-7a01-47b6-85c4-1724331b2dd3')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-758a3024-353f-411c-a9bc-a05534183d7e\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-758a3024-353f-411c-a9bc-a05534183d7e')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-758a3024-353f-411c-a9bc-a05534183d7e button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7b7cf2dd-7a01-47b6-85c4-1724331b2dd3 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7b7cf2dd-7a01-47b6-85c4-1724331b2dd3');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":43}]},{"cell_type":"code","source":["# using boxplot to identify outliers Numerical x Categorical\n","\n","sns.boxplot(\n","    x=telco['Churn'],\n","    y=telco['MonthlyCharges']\n",")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":466},"id":"wqftViQeN27w","executionInfo":{"status":"ok","timestamp":1690866264813,"user_tz":-420,"elapsed":356,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"4e73e37d-2885-49c0-bc36-9be3d039f424"},"execution_count":44,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='Churn', ylabel='MonthlyCharges'>"]},"metadata":{},"execution_count":44},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["sns.boxplot(x=\"Churn\", y=\"tenure\",palette='Set3',data=telco)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":466},"id":"67CjJhNDM2QO","executionInfo":{"status":"ok","timestamp":1690866268042,"user_tz":-420,"elapsed":868,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"2202d05a-4f31-4818-e39c-cf2fe1bd8327"},"execution_count":45,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='Churn', ylabel='tenure'>"]},"metadata":{},"execution_count":45},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["sns.boxplot(x=\"Churn\", y=\"TotalCharges\",palette='Set3',data=telco)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":466},"id":"asmYpAswBNVY","executionInfo":{"status":"ok","timestamp":1690866271750,"user_tz":-420,"elapsed":1425,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"14b71ad0-726a-4630-edbc-4feb40aa1cdb"},"execution_count":46,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='Churn', ylabel='TotalCharges'>"]},"metadata":{},"execution_count":46},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["#Data Preprocessing"],"metadata":{"id":"GJEFyhnF_lAB"}},{"cell_type":"markdown","source":["# Target Feature : Churn\n","\n","#### Numerical Features : Tenure, Monthly Charges & Total Charges\n","\n","#### Categorical Features : Gender, SeniorCitizen, Partner, Dependents, PhoneService, MulitpleLines, InternetService, OnlineSecurity, OnlineBackup, DeviceProtection, TechSupport, StreamingTV, StreamingMovies, Contract, PaperlessBilling, PaymentMethod"],"metadata":{"id":"EcMUg_OW2cm5"}},{"cell_type":"code","source":["# Import Library\n","\n","import warnings\n","warnings.filterwarnings('ignore')\n","\n","%matplotlib inline\n","\n","from imblearn.over_sampling import SMOTE\n","\n","from sklearn import preprocessing\n","from sklearn.impute import SimpleImputer\n","from sklearn.ensemble import RandomForestClassifier\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import accuracy_score, recall_score, confusion_matrix"],"metadata":{"id":"b2D28xpB7vSM","executionInfo":{"status":"ok","timestamp":1690878053919,"user_tz":-420,"elapsed":537,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}}},"execution_count":153,"outputs":[]},{"cell_type":"code","source":["# Datasets\n","\n","telco.head(5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":386},"id":"GqhVEUjjAEa4","executionInfo":{"status":"ok","timestamp":1690866279196,"user_tz":-420,"elapsed":556,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"664b20b0-db44-4ad2-b73c-da55797f60c1"},"execution_count":48,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   customerID  gender  SeniorCitizen Partner Dependents  tenure PhoneService  \\\n","0  7590-VHVEG  Female              0     Yes         No       1           No   \n","1  5575-GNVDE    Male              0      No         No      34          Yes   \n","2  3668-QPYBK    Male              0      No         No       2          Yes   \n","3  7795-CFOCW    Male              0      No         No      45           No   \n","4  9237-HQITU  Female              0      No         No       2          Yes   \n","\n","      MultipleLines InternetService OnlineSecurity  ... DeviceProtection  \\\n","0  No phone service             DSL             No  ...               No   \n","1                No             DSL            Yes  ...              Yes   \n","2                No             DSL            Yes  ...               No   \n","3  No phone service             DSL            Yes  ...              Yes   \n","4                No     Fiber optic             No  ...               No   \n","\n","  TechSupport StreamingTV StreamingMovies        Contract PaperlessBilling  \\\n","0          No          No              No  Month-to-month              Yes   \n","1          No          No              No        One year               No   \n","2          No          No              No  Month-to-month              Yes   \n","3         Yes          No              No        One year               No   \n","4          No          No              No  Month-to-month              Yes   \n","\n","               PaymentMethod MonthlyCharges  TotalCharges  Churn  \n","0           Electronic check          29.85     29.850000     No  \n","1               Mailed check          56.95   1889.500000     No  \n","2               Mailed check          53.85    108.150002    Yes  \n","3  Bank transfer (automatic)          42.30   1840.750000     No  \n","4           Electronic check          70.70    151.649994    Yes  \n","\n","[5 rows x 21 columns]"],"text/html":["\n","\n","  <div id=\"df-0b0d2ad4-642e-4dc1-8ac2-0cdb69466749\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>customerID</th>\n","      <th>gender</th>\n","      <th>SeniorCitizen</th>\n","      <th>Partner</th>\n","      <th>Dependents</th>\n","      <th>tenure</th>\n","      <th>PhoneService</th>\n","      <th>MultipleLines</th>\n","      <th>InternetService</th>\n","      <th>OnlineSecurity</th>\n","      <th>...</th>\n","      <th>DeviceProtection</th>\n","      <th>TechSupport</th>\n","      <th>StreamingTV</th>\n","      <th>StreamingMovies</th>\n","      <th>Contract</th>\n","      <th>PaperlessBilling</th>\n","      <th>PaymentMethod</th>\n","      <th>MonthlyCharges</th>\n","      <th>TotalCharges</th>\n","      <th>Churn</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>7590-VHVEG</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>1</td>\n","      <td>No</td>\n","      <td>No phone service</td>\n","      <td>DSL</td>\n","      <td>No</td>\n","      <td>...</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Month-to-month</td>\n","      <td>Yes</td>\n","      <td>Electronic check</td>\n","      <td>29.85</td>\n","      <td>29.850000</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>5575-GNVDE</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>34</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>DSL</td>\n","      <td>Yes</td>\n","      <td>...</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>One year</td>\n","      <td>No</td>\n","      <td>Mailed check</td>\n","      <td>56.95</td>\n","      <td>1889.500000</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3668-QPYBK</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>2</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>DSL</td>\n","      <td>Yes</td>\n","      <td>...</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Month-to-month</td>\n","      <td>Yes</td>\n","      <td>Mailed check</td>\n","      <td>53.85</td>\n","      <td>108.150002</td>\n","      <td>Yes</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>7795-CFOCW</td>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>45</td>\n","      <td>No</td>\n","      <td>No phone service</td>\n","      <td>DSL</td>\n","      <td>Yes</td>\n","      <td>...</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>One year</td>\n","      <td>No</td>\n","      <td>Bank transfer (automatic)</td>\n","      <td>42.30</td>\n","      <td>1840.750000</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>9237-HQITU</td>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>2</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>Fiber optic</td>\n","      <td>No</td>\n","      <td>...</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Month-to-month</td>\n","      <td>Yes</td>\n","      <td>Electronic check</td>\n","      <td>70.70</td>\n","      <td>151.649994</td>\n","      <td>Yes</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 21 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0b0d2ad4-642e-4dc1-8ac2-0cdb69466749')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-9623ad61-53c6-4ade-9487-9ad5bd8d8da9\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9623ad61-53c6-4ade-9487-9ad5bd8d8da9')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-9623ad61-53c6-4ade-9487-9ad5bd8d8da9 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-0b0d2ad4-642e-4dc1-8ac2-0cdb69466749 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-0b0d2ad4-642e-4dc1-8ac2-0cdb69466749');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":48}]},{"cell_type":"code","source":["cust_id = telco['customerID']"],"metadata":{"id":"NhjsF4SJjc8C","executionInfo":{"status":"ok","timestamp":1690866282857,"user_tz":-420,"elapsed":7,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}}},"execution_count":49,"outputs":[]},{"cell_type":"code","source":["telco.drop('customerID', axis=1, inplace=True)"],"metadata":{"id":"-fe0qNP3kICp","executionInfo":{"status":"ok","timestamp":1690866283736,"user_tz":-420,"elapsed":350,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}}},"execution_count":50,"outputs":[]},{"cell_type":"markdown","source":["Trick 1 - Churn"],"metadata":{"id":"inIUu2Uq8qYZ"}},{"cell_type":"code","source":["telco['Churn'] = telco['Churn'].replace(\"No\", 0).replace(\"Yes\", 1)\n","telco.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":340},"id":"nJZmTOqZG2bW","executionInfo":{"status":"ok","timestamp":1690866299078,"user_tz":-420,"elapsed":325,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"ba21afe3-1e61-440e-a44d-eaadebe17694"},"execution_count":51,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   gender  SeniorCitizen Partner Dependents  tenure PhoneService  \\\n","0  Female              0     Yes         No       1           No   \n","1    Male              0      No         No      34          Yes   \n","2    Male              0      No         No       2          Yes   \n","3    Male              0      No         No      45           No   \n","4  Female              0      No         No       2          Yes   \n","\n","      MultipleLines InternetService OnlineSecurity OnlineBackup  \\\n","0  No phone service             DSL             No          Yes   \n","1                No             DSL            Yes           No   \n","2                No             DSL            Yes          Yes   \n","3  No phone service             DSL            Yes           No   \n","4                No     Fiber optic             No           No   \n","\n","  DeviceProtection TechSupport StreamingTV StreamingMovies        Contract  \\\n","0               No          No          No              No  Month-to-month   \n","1              Yes          No          No              No        One year   \n","2               No          No          No              No  Month-to-month   \n","3              Yes         Yes          No              No        One year   \n","4               No          No          No              No  Month-to-month   \n","\n","  PaperlessBilling              PaymentMethod  MonthlyCharges  TotalCharges  \\\n","0              Yes           Electronic check           29.85     29.850000   \n","1               No               Mailed check           56.95   1889.500000   \n","2              Yes               Mailed check           53.85    108.150002   \n","3               No  Bank transfer (automatic)           42.30   1840.750000   \n","4              Yes           Electronic check           70.70    151.649994   \n","\n","   Churn  \n","0      0  \n","1      0  \n","2      1  \n","3      0  \n","4      1  "],"text/html":["\n","\n","  <div id=\"df-04b3fa68-3baf-4764-a784-b025f5384332\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>gender</th>\n","      <th>SeniorCitizen</th>\n","      <th>Partner</th>\n","      <th>Dependents</th>\n","      <th>tenure</th>\n","      <th>PhoneService</th>\n","      <th>MultipleLines</th>\n","      <th>InternetService</th>\n","      <th>OnlineSecurity</th>\n","      <th>OnlineBackup</th>\n","      <th>DeviceProtection</th>\n","      <th>TechSupport</th>\n","      <th>StreamingTV</th>\n","      <th>StreamingMovies</th>\n","      <th>Contract</th>\n","      <th>PaperlessBilling</th>\n","      <th>PaymentMethod</th>\n","      <th>MonthlyCharges</th>\n","      <th>TotalCharges</th>\n","      <th>Churn</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>1</td>\n","      <td>No</td>\n","      <td>No phone service</td>\n","      <td>DSL</td>\n","      <td>No</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Month-to-month</td>\n","      <td>Yes</td>\n","      <td>Electronic check</td>\n","      <td>29.85</td>\n","      <td>29.850000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>34</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>DSL</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>One year</td>\n","      <td>No</td>\n","      <td>Mailed check</td>\n","      <td>56.95</td>\n","      <td>1889.500000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>2</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>DSL</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Month-to-month</td>\n","      <td>Yes</td>\n","      <td>Mailed check</td>\n","      <td>53.85</td>\n","      <td>108.150002</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>45</td>\n","      <td>No</td>\n","      <td>No phone service</td>\n","      <td>DSL</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>Yes</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>One year</td>\n","      <td>No</td>\n","      <td>Bank transfer (automatic)</td>\n","      <td>42.30</td>\n","      <td>1840.750000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>2</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>Fiber optic</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>Month-to-month</td>\n","      <td>Yes</td>\n","      <td>Electronic check</td>\n","      <td>70.70</td>\n","      <td>151.649994</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-04b3fa68-3baf-4764-a784-b025f5384332')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-d96b98f1-15e1-4ebe-9fd0-c89901d4fc28\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d96b98f1-15e1-4ebe-9fd0-c89901d4fc28')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-d96b98f1-15e1-4ebe-9fd0-c89901d4fc28 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-04b3fa68-3baf-4764-a784-b025f5384332 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-04b3fa68-3baf-4764-a784-b025f5384332');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":51}]},{"cell_type":"code","source":["telco['Partner'] = telco['Partner'].replace(\"No\", 0).replace(\"Yes\", 1)\n","\n","telco['Dependents'] = telco['Dependents'].replace(\"No\", 0).replace(\"Yes\", 1)\n","\n","telco['PaperlessBilling'] = telco['PaperlessBilling'].replace(\"No\", 0).replace(\"Yes\", 1)\n","\n","telco['PhoneService'] = telco['PhoneService'].replace(\"No\", 0).replace(\"Yes\", 1)\n","\n","telco.sample(3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":260},"id":"SCYDJla0ircF","executionInfo":{"status":"ok","timestamp":1690866302564,"user_tz":-420,"elapsed":326,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"48a4e187-4777-458a-bd04-4be98974d46b"},"execution_count":52,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      gender  SeniorCitizen  Partner  Dependents  tenure  PhoneService  \\\n","3025    Male              0        1           1      67             1   \n","3459  Female              0        1           1      30             1   \n","1640  Female              0        1           1       7             1   \n","\n","     MultipleLines InternetService       OnlineSecurity         OnlineBackup  \\\n","3025           Yes              No  No internet service  No internet service   \n","3459           Yes              No  No internet service  No internet service   \n","1640            No              No  No internet service  No internet service   \n","\n","         DeviceProtection          TechSupport          StreamingTV  \\\n","3025  No internet service  No internet service  No internet service   \n","3459  No internet service  No internet service  No internet service   \n","1640  No internet service  No internet service  No internet service   \n","\n","          StreamingMovies  Contract  PaperlessBilling PaymentMethod  \\\n","3025  No internet service  Two year                 0  Mailed check   \n","3459  No internet service  Two year                 1  Mailed check   \n","1640  No internet service  One year                 0  Mailed check   \n","\n","      MonthlyCharges  TotalCharges  Churn  \n","3025           26.30   1688.900024      0  \n","3459           25.10    789.549988      0  \n","1640           20.65    134.050003      0  "],"text/html":["\n","\n","  <div id=\"df-f7d99827-6342-49b4-9aef-5297721c3bd2\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>gender</th>\n","      <th>SeniorCitizen</th>\n","      <th>Partner</th>\n","      <th>Dependents</th>\n","      <th>tenure</th>\n","      <th>PhoneService</th>\n","      <th>MultipleLines</th>\n","      <th>InternetService</th>\n","      <th>OnlineSecurity</th>\n","      <th>OnlineBackup</th>\n","      <th>DeviceProtection</th>\n","      <th>TechSupport</th>\n","      <th>StreamingTV</th>\n","      <th>StreamingMovies</th>\n","      <th>Contract</th>\n","      <th>PaperlessBilling</th>\n","      <th>PaymentMethod</th>\n","      <th>MonthlyCharges</th>\n","      <th>TotalCharges</th>\n","      <th>Churn</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>3025</th>\n","      <td>Male</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>67</td>\n","      <td>1</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>No internet service</td>\n","      <td>No internet service</td>\n","      <td>No internet service</td>\n","      <td>No internet service</td>\n","      <td>No internet service</td>\n","      <td>No internet service</td>\n","      <td>Two year</td>\n","      <td>0</td>\n","      <td>Mailed check</td>\n","      <td>26.30</td>\n","      <td>1688.900024</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3459</th>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>30</td>\n","      <td>1</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>No internet service</td>\n","      <td>No internet service</td>\n","      <td>No internet service</td>\n","      <td>No internet service</td>\n","      <td>No internet service</td>\n","      <td>No internet service</td>\n","      <td>Two year</td>\n","      <td>1</td>\n","      <td>Mailed check</td>\n","      <td>25.10</td>\n","      <td>789.549988</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1640</th>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>No internet service</td>\n","      <td>No internet service</td>\n","      <td>No internet service</td>\n","      <td>No internet service</td>\n","      <td>No internet service</td>\n","      <td>No internet service</td>\n","      <td>One year</td>\n","      <td>0</td>\n","      <td>Mailed check</td>\n","      <td>20.65</td>\n","      <td>134.050003</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f7d99827-6342-49b4-9aef-5297721c3bd2')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-fdc59d54-ad4b-40dc-abf4-1f7d59d8535b\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fdc59d54-ad4b-40dc-abf4-1f7d59d8535b')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-fdc59d54-ad4b-40dc-abf4-1f7d59d8535b button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f7d99827-6342-49b4-9aef-5297721c3bd2 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f7d99827-6342-49b4-9aef-5297721c3bd2');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":52}]},{"cell_type":"code","source":["telco['MultipleLines'] = telco['MultipleLines'].replace(\"No\", 0).replace(\"Yes\", 1).replace(\"No phone service\", 3)\n","\n","telco['OnlineSecurity'] = telco['OnlineSecurity'].replace(\"No\", 0).replace(\"Yes\", 1).replace(\"No internet service\", 3)\n","\n","telco['OnlineBackup'] = telco['OnlineBackup'].replace(\"No\", 0).replace(\"Yes\", 1).replace(\"No internet service\", 3)\n","\n","telco['DeviceProtection'] = telco['DeviceProtection'].replace(\"No\", 0).replace(\"Yes\", 1).replace(\"No internet service\", 3)\n","\n","telco['TechSupport'] = telco['TechSupport'].replace(\"No\", 0).replace(\"Yes\", 1).replace(\"No internet service\", 3)\n","\n","telco['StreamingTV'] = telco['StreamingTV'].replace(\"No\", 0).replace(\"Yes\", 1).replace(\"No internet service\", 3)\n","\n","telco['StreamingMovies'] = telco['StreamingMovies'].replace(\"No\", 0).replace(\"Yes\", 1).replace(\"No internet service\", 3)"],"metadata":{"id":"IFA5e6rvr6uo","executionInfo":{"status":"ok","timestamp":1690866339009,"user_tz":-420,"elapsed":346,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}}},"execution_count":53,"outputs":[]},{"cell_type":"code","source":["telco.head(5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":340},"id":"eC9sAtPos89I","executionInfo":{"status":"ok","timestamp":1690866368123,"user_tz":-420,"elapsed":362,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"b407e313-3675-4a2b-9a9e-3863fdd37d6d"},"execution_count":60,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   SeniorCitizen  Partner  Dependents  tenure  PhoneService  MultipleLines  \\\n","0              0        1           0       1             0              3   \n","1              0        0           0      34             1              0   \n","2              0        0           0       2             1              0   \n","3              0        0           0      45             0              3   \n","4              0        0           0       2             1              0   \n","\n","  InternetService  OnlineSecurity  OnlineBackup  DeviceProtection  \\\n","0             DSL               0             1                 0   \n","1             DSL               1             0                 1   \n","2             DSL               1             1                 0   \n","3             DSL               1             0                 1   \n","4     Fiber optic               0             0                 0   \n","\n","   TechSupport  StreamingTV  StreamingMovies        Contract  \\\n","0            0            0                0  Month-to-month   \n","1            0            0                0        One year   \n","2            0            0                0  Month-to-month   \n","3            1            0                0        One year   \n","4            0            0                0  Month-to-month   \n","\n","   PaperlessBilling              PaymentMethod  MonthlyCharges  TotalCharges  \\\n","0                 1           Electronic check           29.85     29.850000   \n","1                 0               Mailed check           56.95   1889.500000   \n","2                 1               Mailed check           53.85    108.150002   \n","3                 0  Bank transfer (automatic)           42.30   1840.750000   \n","4                 1           Electronic check           70.70    151.649994   \n","\n","   Churn  gender_label_encoding  \n","0      0                      0  \n","1      0                      1  \n","2      1                      1  \n","3      0                      1  \n","4      1                      0  "],"text/html":["\n","\n","  <div id=\"df-f945a617-fd8e-475c-8820-cd79b0043b18\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>SeniorCitizen</th>\n","      <th>Partner</th>\n","      <th>Dependents</th>\n","      <th>tenure</th>\n","      <th>PhoneService</th>\n","      <th>MultipleLines</th>\n","      <th>InternetService</th>\n","      <th>OnlineSecurity</th>\n","      <th>OnlineBackup</th>\n","      <th>DeviceProtection</th>\n","      <th>TechSupport</th>\n","      <th>StreamingTV</th>\n","      <th>StreamingMovies</th>\n","      <th>Contract</th>\n","      <th>PaperlessBilling</th>\n","      <th>PaymentMethod</th>\n","      <th>MonthlyCharges</th>\n","      <th>TotalCharges</th>\n","      <th>Churn</th>\n","      <th>gender_label_encoding</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>DSL</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Month-to-month</td>\n","      <td>1</td>\n","      <td>Electronic check</td>\n","      <td>29.85</td>\n","      <td>29.850000</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>34</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>DSL</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>One year</td>\n","      <td>0</td>\n","      <td>Mailed check</td>\n","      <td>56.95</td>\n","      <td>1889.500000</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>DSL</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Month-to-month</td>\n","      <td>1</td>\n","      <td>Mailed check</td>\n","      <td>53.85</td>\n","      <td>108.150002</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>45</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>DSL</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>One year</td>\n","      <td>0</td>\n","      <td>Bank transfer (automatic)</td>\n","      <td>42.30</td>\n","      <td>1840.750000</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Fiber optic</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Month-to-month</td>\n","      <td>1</td>\n","      <td>Electronic check</td>\n","      <td>70.70</td>\n","      <td>151.649994</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f945a617-fd8e-475c-8820-cd79b0043b18')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-a5f5acc5-401b-41d4-a528-bb5c66eedd7c\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a5f5acc5-401b-41d4-a528-bb5c66eedd7c')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-a5f5acc5-401b-41d4-a528-bb5c66eedd7c button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f945a617-fd8e-475c-8820-cd79b0043b18 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f945a617-fd8e-475c-8820-cd79b0043b18');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":60}]},{"cell_type":"markdown","source":["Trick 2 - Gender"],"metadata":{"id":"W6J7fx4O8sf4"}},{"cell_type":"code","source":["telco['gender_label_encoding'] = telco['gender'].astype('category').cat.codes"],"metadata":{"id":"mQFS2qwV8ubr","executionInfo":{"status":"ok","timestamp":1690866356449,"user_tz":-420,"elapsed":333,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}}},"execution_count":55,"outputs":[]},{"cell_type":"code","source":["gender_label_encoding = telco[['gender','gender_label_encoding','gender_label_encoding']]\n","gender_label_encoding.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"U9iANDKa9Op_","executionInfo":{"status":"ok","timestamp":1690866357771,"user_tz":-420,"elapsed":12,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"91086dcf-1ccc-48ac-a462-fbb253f75162"},"execution_count":56,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   gender  gender_label_encoding  gender_label_encoding\n","0  Female                      0                      0\n","1    Male                      1                      1\n","2    Male                      1                      1\n","3    Male                      1                      1\n","4  Female                      0                      0"],"text/html":["\n","\n","  <div id=\"df-b52995b9-36ab-4ceb-932f-ade062f5c4ee\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>gender</th>\n","      <th>gender_label_encoding</th>\n","      <th>gender_label_encoding</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Male</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Male</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Male</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b52995b9-36ab-4ceb-932f-ade062f5c4ee')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-3777110f-d386-4428-8385-3d936abd5a08\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3777110f-d386-4428-8385-3d936abd5a08')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-3777110f-d386-4428-8385-3d936abd5a08 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b52995b9-36ab-4ceb-932f-ade062f5c4ee button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b52995b9-36ab-4ceb-932f-ade062f5c4ee');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":56}]},{"cell_type":"code","source":["gender_label_encoding.drop_duplicates()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"ELo19B2G9vo6","executionInfo":{"status":"ok","timestamp":1690866361219,"user_tz":-420,"elapsed":7,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"ced30d46-8479-4eda-bd59-9190806318f1"},"execution_count":57,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   gender  gender_label_encoding  gender_label_encoding\n","0  Female                      0                      0\n","1    Male                      1                      1"],"text/html":["\n","\n","  <div id=\"df-35924ee8-b485-4d16-8562-0a5bf63fe6d2\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>gender</th>\n","      <th>gender_label_encoding</th>\n","      <th>gender_label_encoding</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Female</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Male</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-35924ee8-b485-4d16-8562-0a5bf63fe6d2')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-042bc5b7-e630-4418-8f5e-1324dbd28dde\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-042bc5b7-e630-4418-8f5e-1324dbd28dde')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-042bc5b7-e630-4418-8f5e-1324dbd28dde button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-35924ee8-b485-4d16-8562-0a5bf63fe6d2 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-35924ee8-b485-4d16-8562-0a5bf63fe6d2');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":57}]},{"cell_type":"code","source":["gender = telco['gender']"],"metadata":{"id":"tZ07YvdIk3kj","executionInfo":{"status":"ok","timestamp":1690866363257,"user_tz":-420,"elapsed":547,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}}},"execution_count":58,"outputs":[]},{"cell_type":"code","source":["telco.drop('gender', axis=1, inplace=True)"],"metadata":{"id":"e7_78h8elBXw","executionInfo":{"status":"ok","timestamp":1690866364495,"user_tz":-420,"elapsed":335,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}}},"execution_count":59,"outputs":[]},{"cell_type":"markdown","source":["Trick 3 : Ordinal Encoding\n","\n","*   Contract\n","*   Payment Method\n","\n","*   InternetService\n","*   List item\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n"],"metadata":{"id":"TaXnvY5p8ayR"}},{"cell_type":"code","source":["map_contract = {'Two year':3,\n","             'One year':2,\n","             'Month-to-month':1}\n","telco['contract_ordinal'] = telco['Contract'].map(map_contract)\n","telco[['Contract','contract_ordinal']].head(15)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":520},"id":"TiYy-FZp97Nf","executionInfo":{"status":"ok","timestamp":1690866400072,"user_tz":-420,"elapsed":336,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"832b9a31-230a-4f2d-843c-53b73189387d"},"execution_count":62,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          Contract  contract_ordinal\n","0   Month-to-month                 1\n","1         One year                 2\n","2   Month-to-month                 1\n","3         One year                 2\n","4   Month-to-month                 1\n","5   Month-to-month                 1\n","6   Month-to-month                 1\n","7   Month-to-month                 1\n","8   Month-to-month                 1\n","9         One year                 2\n","10  Month-to-month                 1\n","11        Two year                 3\n","12        One year                 2\n","13  Month-to-month                 1\n","14  Month-to-month                 1"],"text/html":["\n","\n","  <div id=\"df-9d92750f-2e6e-4ca6-b803-41225ef8455d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Contract</th>\n","      <th>contract_ordinal</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Month-to-month</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>One year</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Month-to-month</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>One year</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Month-to-month</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Month-to-month</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Month-to-month</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Month-to-month</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Month-to-month</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>One year</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Month-to-month</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Two year</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>One year</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>Month-to-month</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>Month-to-month</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9d92750f-2e6e-4ca6-b803-41225ef8455d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-c8481619-0f93-4ffa-a396-7235638f2a30\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c8481619-0f93-4ffa-a396-7235638f2a30')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-c8481619-0f93-4ffa-a396-7235638f2a30 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-9d92750f-2e6e-4ca6-b803-41225ef8455d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-9d92750f-2e6e-4ca6-b803-41225ef8455d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":62}]},{"cell_type":"code","source":["telco[['Contract','contract_ordinal']].drop_duplicates()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"g0udtmSe-jgV","executionInfo":{"status":"ok","timestamp":1690866404136,"user_tz":-420,"elapsed":16,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"5e647ff1-41f5-4d35-f750-4542fe24555e"},"execution_count":63,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          Contract  contract_ordinal\n","0   Month-to-month                 1\n","1         One year                 2\n","11        Two year                 3"],"text/html":["\n","\n","  <div id=\"df-161128f5-2085-41ea-bc87-8484dc4a81f2\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Contract</th>\n","      <th>contract_ordinal</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Month-to-month</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>One year</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Two year</td>\n","      <td>3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-161128f5-2085-41ea-bc87-8484dc4a81f2')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-b9627d1c-eadf-4358-a04f-b01053b2abdb\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b9627d1c-eadf-4358-a04f-b01053b2abdb')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-b9627d1c-eadf-4358-a04f-b01053b2abdb button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-161128f5-2085-41ea-bc87-8484dc4a81f2 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-161128f5-2085-41ea-bc87-8484dc4a81f2');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":63}]},{"cell_type":"code","source":["contract = telco['Contract']"],"metadata":{"id":"bfgsXZlwlHes","executionInfo":{"status":"ok","timestamp":1690866406969,"user_tz":-420,"elapsed":8,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}}},"execution_count":64,"outputs":[]},{"cell_type":"code","source":["telco.drop('Contract', axis=1, inplace=True)"],"metadata":{"id":"Uly3NDAtlL50","executionInfo":{"status":"ok","timestamp":1690866407313,"user_tz":-420,"elapsed":5,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}}},"execution_count":65,"outputs":[]},{"cell_type":"code","source":["map_paymethod = {'Bank transfer (automatic)':1,\n","              'Credit card (automatic)':2,\n","              'Electronic check':3,\n","              'Mailed check':4}\n","telco['paymethod'] = telco['PaymentMethod'].map(map_paymethod)\n","telco[['PaymentMethod','paymethod']].head(5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"3LmDniOal5rq","executionInfo":{"status":"ok","timestamp":1690866409800,"user_tz":-420,"elapsed":17,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"39d43219-68c5-4bc6-d0b9-f9ffda3d7126"},"execution_count":66,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               PaymentMethod  paymethod\n","0           Electronic check          3\n","1               Mailed check          4\n","2               Mailed check          4\n","3  Bank transfer (automatic)          1\n","4           Electronic check          3"],"text/html":["\n","\n","  <div id=\"df-b5c7cad3-42a6-4828-a6ed-9cf06b1c6239\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PaymentMethod</th>\n","      <th>paymethod</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Electronic check</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Mailed check</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Mailed check</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Bank transfer (automatic)</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Electronic check</td>\n","      <td>3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b5c7cad3-42a6-4828-a6ed-9cf06b1c6239')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-b78272eb-8110-4ab3-af74-12da9ac9ac04\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b78272eb-8110-4ab3-af74-12da9ac9ac04')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-b78272eb-8110-4ab3-af74-12da9ac9ac04 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b5c7cad3-42a6-4828-a6ed-9cf06b1c6239 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b5c7cad3-42a6-4828-a6ed-9cf06b1c6239');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":66}]},{"cell_type":"code","source":["telco[['PaymentMethod','paymethod']].drop_duplicates()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"eYzRGYYeAE0U","executionInfo":{"status":"ok","timestamp":1690866412505,"user_tz":-420,"elapsed":351,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"6b0c1c0b-86df-45ac-dd24-b038253300f8"},"execution_count":67,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               PaymentMethod  paymethod\n","0           Electronic check          3\n","1               Mailed check          4\n","3  Bank transfer (automatic)          1\n","6    Credit card (automatic)          2"],"text/html":["\n","\n","  <div id=\"df-3537ac9f-cdbb-4230-ae6e-24b9a06bbb41\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PaymentMethod</th>\n","      <th>paymethod</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Electronic check</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Mailed check</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Bank transfer (automatic)</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Credit card (automatic)</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3537ac9f-cdbb-4230-ae6e-24b9a06bbb41')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-780b2a52-b400-463a-b23d-e3cda9a98355\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-780b2a52-b400-463a-b23d-e3cda9a98355')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-780b2a52-b400-463a-b23d-e3cda9a98355 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-3537ac9f-cdbb-4230-ae6e-24b9a06bbb41 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-3537ac9f-cdbb-4230-ae6e-24b9a06bbb41');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":67}]},{"cell_type":"code","source":["payment_method = telco['PaymentMethod']"],"metadata":{"id":"N4I_hB43lQKl","executionInfo":{"status":"ok","timestamp":1690866415653,"user_tz":-420,"elapsed":7,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}}},"execution_count":68,"outputs":[]},{"cell_type":"code","source":["telco.drop('PaymentMethod', axis=1, inplace=True)"],"metadata":{"id":"6qnD4wEblUr0","executionInfo":{"status":"ok","timestamp":1690866416348,"user_tz":-420,"elapsed":7,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}}},"execution_count":69,"outputs":[]},{"cell_type":"code","source":["map_IService = {'No':3,\n","             'Fiber optic':2,\n","             'DSL':1}\n","telco['IService_ordinal'] = telco['InternetService'].map(map_IService)\n","telco[['InternetService','IService_ordinal']].head(15)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":520},"id":"FXmTLH7CvopZ","executionInfo":{"status":"ok","timestamp":1690866418505,"user_tz":-420,"elapsed":16,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"bdafd8f8-fc6e-41b7-edd6-c6d73b191504"},"execution_count":70,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   InternetService  IService_ordinal\n","0              DSL                 1\n","1              DSL                 1\n","2              DSL                 1\n","3              DSL                 1\n","4      Fiber optic                 2\n","5      Fiber optic                 2\n","6      Fiber optic                 2\n","7              DSL                 1\n","8      Fiber optic                 2\n","9              DSL                 1\n","10             DSL                 1\n","11              No                 3\n","12     Fiber optic                 2\n","13     Fiber optic                 2\n","14     Fiber optic                 2"],"text/html":["\n","\n","  <div id=\"df-53fb8971-db11-4483-9c34-f27025d5121e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>InternetService</th>\n","      <th>IService_ordinal</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>DSL</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>DSL</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>DSL</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>DSL</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Fiber optic</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Fiber optic</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Fiber optic</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>DSL</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Fiber optic</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>DSL</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>DSL</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>No</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Fiber optic</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>Fiber optic</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>Fiber optic</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-53fb8971-db11-4483-9c34-f27025d5121e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-426e1b05-2793-49f5-af2a-d20f120f1ef9\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-426e1b05-2793-49f5-af2a-d20f120f1ef9')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-426e1b05-2793-49f5-af2a-d20f120f1ef9 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-53fb8971-db11-4483-9c34-f27025d5121e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-53fb8971-db11-4483-9c34-f27025d5121e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":70}]},{"cell_type":"code","source":["telco[['InternetService','IService_ordinal']].drop_duplicates()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"y3nHf1YxxodE","executionInfo":{"status":"ok","timestamp":1690866422503,"user_tz":-420,"elapsed":359,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"dbd23fb1-1ba8-4d22-fd95-28b6ad53fa44"},"execution_count":71,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   InternetService  IService_ordinal\n","0              DSL                 1\n","4      Fiber optic                 2\n","11              No                 3"],"text/html":["\n","\n","  <div id=\"df-17a626d9-1d11-4367-b66b-2f142585435a\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>InternetService</th>\n","      <th>IService_ordinal</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>DSL</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Fiber optic</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>No</td>\n","      <td>3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-17a626d9-1d11-4367-b66b-2f142585435a')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-2702d245-2ee9-4104-8085-5e9f7ed67401\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2702d245-2ee9-4104-8085-5e9f7ed67401')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-2702d245-2ee9-4104-8085-5e9f7ed67401 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-17a626d9-1d11-4367-b66b-2f142585435a button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-17a626d9-1d11-4367-b66b-2f142585435a');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":71}]},{"cell_type":"code","source":["IService_method = telco['InternetService']"],"metadata":{"id":"_yuwAQZJx1xY","executionInfo":{"status":"ok","timestamp":1690866424349,"user_tz":-420,"elapsed":3,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}}},"execution_count":72,"outputs":[]},{"cell_type":"code","source":["telco['IService_ordinal'].value_counts"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4U6MfMy13nA5","executionInfo":{"status":"ok","timestamp":1690866427330,"user_tz":-420,"elapsed":351,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"e58f8d37-e18a-46ad-8c8c-ef39837078e0"},"execution_count":73,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<bound method IndexOpsMixin.value_counts of 0       1\n","1       1\n","2       1\n","3       1\n","4       2\n","       ..\n","7038    1\n","7039    2\n","7040    1\n","7041    2\n","7042    2\n","Name: IService_ordinal, Length: 7043, dtype: int64>"]},"metadata":{},"execution_count":73}]},{"cell_type":"code","source":["telco.drop('InternetService', axis=1, inplace=True)"],"metadata":{"id":"6oIQxIEVx8Ww","executionInfo":{"status":"ok","timestamp":1690866431058,"user_tz":-420,"elapsed":7,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}}},"execution_count":74,"outputs":[]},{"cell_type":"code","source":["telco"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":488},"id":"h4C9WywCfjwm","executionInfo":{"status":"ok","timestamp":1690866439689,"user_tz":-420,"elapsed":374,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"e7f5f1f5-d6a5-4c88-86bd-8d4a5a8f2aa8"},"execution_count":75,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      SeniorCitizen  Partner  Dependents  tenure  PhoneService  MultipleLines  \\\n","0                 0        1           0       1             0              3   \n","1                 0        0           0      34             1              0   \n","2                 0        0           0       2             1              0   \n","3                 0        0           0      45             0              3   \n","4                 0        0           0       2             1              0   \n","...             ...      ...         ...     ...           ...            ...   \n","7038              0        1           1      24             1              1   \n","7039              0        1           1      72             1              1   \n","7040              0        1           1      11             0              3   \n","7041              1        1           0       4             1              1   \n","7042              0        0           0      66             1              0   \n","\n","      OnlineSecurity  OnlineBackup  DeviceProtection  TechSupport  \\\n","0                  0             1                 0            0   \n","1                  1             0                 1            0   \n","2                  1             1                 0            0   \n","3                  1             0                 1            1   \n","4                  0             0                 0            0   \n","...              ...           ...               ...          ...   \n","7038               1             0                 1            1   \n","7039               0             1                 1            0   \n","7040               1             0                 0            0   \n","7041               0             0                 0            0   \n","7042               1             0                 1            1   \n","\n","      StreamingTV  StreamingMovies  PaperlessBilling  MonthlyCharges  \\\n","0               0                0                 1           29.85   \n","1               0                0                 0           56.95   \n","2               0                0                 1           53.85   \n","3               0                0                 0           42.30   \n","4               0                0                 1           70.70   \n","...           ...              ...               ...             ...   \n","7038            1                1                 1           84.80   \n","7039            1                1                 1          103.20   \n","7040            0                0                 1           29.60   \n","7041            0                0                 1           74.40   \n","7042            1                1                 1          105.65   \n","\n","      TotalCharges  Churn  gender_label_encoding  contract_ordinal  paymethod  \\\n","0        29.850000      0                      0                 1          3   \n","1      1889.500000      0                      1                 2          4   \n","2       108.150002      1                      1                 1          4   \n","3      1840.750000      0                      1                 2          1   \n","4       151.649994      1                      0                 1          3   \n","...            ...    ...                    ...               ...        ...   \n","7038   1990.500000      0                      1                 2          4   \n","7039   7362.899902      0                      0                 2          2   \n","7040    346.450012      0                      0                 1          3   \n","7041    306.600006      1                      1                 1          4   \n","7042   6844.500000      0                      1                 3          1   \n","\n","      IService_ordinal  \n","0                    1  \n","1                    1  \n","2                    1  \n","3                    1  \n","4                    2  \n","...                ...  \n","7038                 1  \n","7039                 2  \n","7040                 1  \n","7041                 2  \n","7042                 2  \n","\n","[7043 rows x 20 columns]"],"text/html":["\n","\n","  <div id=\"df-04f39e73-d0d2-4a86-aaf6-cd7c32e83d30\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>SeniorCitizen</th>\n","      <th>Partner</th>\n","      <th>Dependents</th>\n","      <th>tenure</th>\n","      <th>PhoneService</th>\n","      <th>MultipleLines</th>\n","      <th>OnlineSecurity</th>\n","      <th>OnlineBackup</th>\n","      <th>DeviceProtection</th>\n","      <th>TechSupport</th>\n","      <th>StreamingTV</th>\n","      <th>StreamingMovies</th>\n","      <th>PaperlessBilling</th>\n","      <th>MonthlyCharges</th>\n","      <th>TotalCharges</th>\n","      <th>Churn</th>\n","      <th>gender_label_encoding</th>\n","      <th>contract_ordinal</th>\n","      <th>paymethod</th>\n","      <th>IService_ordinal</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>29.85</td>\n","      <td>29.850000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>34</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>56.95</td>\n","      <td>1889.500000</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>4</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>53.85</td>\n","      <td>108.150002</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>45</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>42.30</td>\n","      <td>1840.750000</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>70.70</td>\n","      <td>151.649994</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>7038</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>24</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>84.80</td>\n","      <td>1990.500000</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>4</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>7039</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>72</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>103.20</td>\n","      <td>7362.899902</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>7040</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>11</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>29.60</td>\n","      <td>346.450012</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>7041</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>74.40</td>\n","      <td>306.600006</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>7042</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>66</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>105.65</td>\n","      <td>6844.500000</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>7043 rows × 20 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-04f39e73-d0d2-4a86-aaf6-cd7c32e83d30')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-37d97e9f-a666-4e81-b956-acf975103d5b\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-37d97e9f-a666-4e81-b956-acf975103d5b')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-37d97e9f-a666-4e81-b956-acf975103d5b button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-04f39e73-d0d2-4a86-aaf6-cd7c32e83d30 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-04f39e73-d0d2-4a86-aaf6-cd7c32e83d30');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":75}]},{"cell_type":"code","source":["telco[telco[\"tenure\"] == 0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":458},"id":"IRRuD39ffxNc","executionInfo":{"status":"ok","timestamp":1690866502070,"user_tz":-420,"elapsed":330,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"f7937a16-5fc0-4c0d-ae71-2f4f41de07da"},"execution_count":76,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      SeniorCitizen  Partner  Dependents  tenure  PhoneService  MultipleLines  \\\n","488               0        1           1       0             0              3   \n","753               0        0           1       0             1              0   \n","936               0        1           1       0             1              0   \n","1082              0        1           1       0             1              1   \n","1340              0        1           1       0             0              3   \n","3331              0        1           1       0             1              0   \n","3826              0        1           1       0             1              1   \n","4380              0        1           1       0             1              0   \n","5218              0        1           1       0             1              0   \n","6670              0        1           1       0             1              1   \n","6754              0        0           1       0             1              1   \n","\n","      OnlineSecurity  OnlineBackup  DeviceProtection  TechSupport  \\\n","488                1             0                 1            1   \n","753                3             3                 3            3   \n","936                1             1                 1            0   \n","1082               3             3                 3            3   \n","1340               1             1                 1            1   \n","3331               3             3                 3            3   \n","3826               3             3                 3            3   \n","4380               3             3                 3            3   \n","5218               3             3                 3            3   \n","6670               0             1                 1            1   \n","6754               1             1                 0            1   \n","\n","      StreamingTV  StreamingMovies  PaperlessBilling  MonthlyCharges  \\\n","488             1                0                 1           52.55   \n","753             3                3                 0           20.25   \n","936             1                1                 0           80.85   \n","1082            3                3                 0           25.75   \n","1340            1                0                 0           56.05   \n","3331            3                3                 0           19.85   \n","3826            3                3                 0           25.35   \n","4380            3                3                 0           20.00   \n","5218            3                3                 1           19.70   \n","6670            1                0                 0           73.35   \n","6754            0                0                 1           61.90   \n","\n","      TotalCharges  Churn  gender_label_encoding  contract_ordinal  paymethod  \\\n","488            NaN      0                      0                 3          1   \n","753            NaN      0                      1                 3          4   \n","936            NaN      0                      0                 3          4   \n","1082           NaN      0                      1                 3          4   \n","1340           NaN      0                      0                 3          2   \n","3331           NaN      0                      1                 3          4   \n","3826           NaN      0                      1                 3          4   \n","4380           NaN      0                      0                 3          4   \n","5218           NaN      0                      1                 2          4   \n","6670           NaN      0                      0                 3          4   \n","6754           NaN      0                      1                 3          1   \n","\n","      IService_ordinal  \n","488                  1  \n","753                  3  \n","936                  1  \n","1082                 3  \n","1340                 1  \n","3331                 3  \n","3826                 3  \n","4380                 3  \n","5218                 3  \n","6670                 1  \n","6754                 1  "],"text/html":["\n","\n","  <div id=\"df-e6ab1d73-8718-463a-ad6d-a5056f4b023c\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>SeniorCitizen</th>\n","      <th>Partner</th>\n","      <th>Dependents</th>\n","      <th>tenure</th>\n","      <th>PhoneService</th>\n","      <th>MultipleLines</th>\n","      <th>OnlineSecurity</th>\n","      <th>OnlineBackup</th>\n","      <th>DeviceProtection</th>\n","      <th>TechSupport</th>\n","      <th>StreamingTV</th>\n","      <th>StreamingMovies</th>\n","      <th>PaperlessBilling</th>\n","      <th>MonthlyCharges</th>\n","      <th>TotalCharges</th>\n","      <th>Churn</th>\n","      <th>gender_label_encoding</th>\n","      <th>contract_ordinal</th>\n","      <th>paymethod</th>\n","      <th>IService_ordinal</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>488</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>52.55</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>753</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>20.25</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>936</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>80.85</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1082</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>25.75</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>1340</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>56.05</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3331</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>19.85</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>3826</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>25.35</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>4380</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>20.00</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>5218</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>19.70</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>4</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>6670</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>73.35</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>6754</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>61.90</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e6ab1d73-8718-463a-ad6d-a5056f4b023c')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-9f2a45a4-b05f-4629-94d7-f98dfef37909\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9f2a45a4-b05f-4629-94d7-f98dfef37909')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-9f2a45a4-b05f-4629-94d7-f98dfef37909 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e6ab1d73-8718-463a-ad6d-a5056f4b023c button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e6ab1d73-8718-463a-ad6d-a5056f4b023c');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":76}]},{"cell_type":"code","source":["def remove_zero_tenure(telco):\n","  n = telco[telco['tenure'] != 0]\n","  return n\n","\n","telco = remove_zero_tenure(telco)"],"metadata":{"id":"5953T3kgf3sb","executionInfo":{"status":"ok","timestamp":1690866539459,"user_tz":-420,"elapsed":11,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}}},"execution_count":78,"outputs":[]},{"cell_type":"code","source":["telco[480:490]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":427},"id":"zbkAq21Cf_aH","executionInfo":{"status":"ok","timestamp":1690866554050,"user_tz":-420,"elapsed":11,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"337f2d6d-f2ab-4fe0-fb35-4bb76354ea6f"},"execution_count":80,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     SeniorCitizen  Partner  Dependents  tenure  PhoneService  MultipleLines  \\\n","480              0        1           1      11             1              0   \n","481              0        1           0      48             0              3   \n","482              1        0           0      20             1              0   \n","483              0        1           0      72             1              1   \n","484              0        1           1       8             1              0   \n","485              0        1           1      72             1              1   \n","486              0        0           0      15             1              1   \n","487              0        0           0      72             1              1   \n","489              0        0           1       1             1              1   \n","490              0        1           1      63             1              1   \n","\n","     OnlineSecurity  OnlineBackup  DeviceProtection  TechSupport  StreamingTV  \\\n","480               3             3                 3            3            3   \n","481               1             0                 1            0            0   \n","482               0             0                 0            0            0   \n","483               0             1                 1            1            1   \n","484               0             1                 0            0            1   \n","485               0             0                 0            0            0   \n","486               0             1                 0            0            1   \n","487               0             1                 1            1            1   \n","489               0             0                 0            0            0   \n","490               0             1                 1            0            1   \n","\n","     StreamingMovies  PaperlessBilling  MonthlyCharges  TotalCharges  Churn  \\\n","480                3                 0           19.65    225.750000      0   \n","481                1                 1           45.30   2145.000000      1   \n","482                1                 1           81.45   1671.599976      0   \n","483                1                 1          108.50   8003.799805      0   \n","484                0                 1           83.55    680.049988      1   \n","485                1                 1           84.50   6130.850098      0   \n","486                1                 1          100.15   1415.000000      0   \n","487                1                 1           88.60   6201.950195      0   \n","489                0                 1           74.35     74.349998      1   \n","490                1                 1          104.80   6597.250000      0   \n","\n","     gender_label_encoding  contract_ordinal  paymethod  IService_ordinal  \n","480                      1                 3          4                 3  \n","481                      0                 1          1                 1  \n","482                      0                 1          3                 2  \n","483                      0                 2          1                 2  \n","484                      0                 1          3                 2  \n","485                      1                 3          2                 2  \n","486                      0                 1          3                 2  \n","487                      1                 3          1                 1  \n","489                      1                 1          3                 2  \n","490                      1                 3          1                 2  "],"text/html":["\n","\n","  <div id=\"df-379ba9af-0098-4b77-841c-61b74f89637f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>SeniorCitizen</th>\n","      <th>Partner</th>\n","      <th>Dependents</th>\n","      <th>tenure</th>\n","      <th>PhoneService</th>\n","      <th>MultipleLines</th>\n","      <th>OnlineSecurity</th>\n","      <th>OnlineBackup</th>\n","      <th>DeviceProtection</th>\n","      <th>TechSupport</th>\n","      <th>StreamingTV</th>\n","      <th>StreamingMovies</th>\n","      <th>PaperlessBilling</th>\n","      <th>MonthlyCharges</th>\n","      <th>TotalCharges</th>\n","      <th>Churn</th>\n","      <th>gender_label_encoding</th>\n","      <th>contract_ordinal</th>\n","      <th>paymethod</th>\n","      <th>IService_ordinal</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>480</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>11</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>19.65</td>\n","      <td>225.750000</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>481</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>48</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>45.30</td>\n","      <td>2145.000000</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>482</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>81.45</td>\n","      <td>1671.599976</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>483</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>72</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>108.50</td>\n","      <td>8003.799805</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>484</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>8</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>83.55</td>\n","      <td>680.049988</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>485</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>72</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>84.50</td>\n","      <td>6130.850098</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>486</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>15</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>100.15</td>\n","      <td>1415.000000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>487</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>72</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>88.60</td>\n","      <td>6201.950195</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>489</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>74.35</td>\n","      <td>74.349998</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>490</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>63</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>104.80</td>\n","      <td>6597.250000</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-379ba9af-0098-4b77-841c-61b74f89637f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-cd0ca6b0-e4c1-48c8-a661-9f13ece8ac34\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cd0ca6b0-e4c1-48c8-a661-9f13ece8ac34')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-cd0ca6b0-e4c1-48c8-a661-9f13ece8ac34 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-379ba9af-0098-4b77-841c-61b74f89637f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-379ba9af-0098-4b77-841c-61b74f89637f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":80}]},{"cell_type":"code","source":["telco.to_csv('backup.csv')"],"metadata":{"id":"fE8nl0DxgD8D","executionInfo":{"status":"ok","timestamp":1690866570980,"user_tz":-420,"elapsed":5,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}}},"execution_count":81,"outputs":[]},{"cell_type":"markdown","source":["Trick 4 : Frequency Encoding"],"metadata":{"id":"gau4FHGAtEyB"}},{"cell_type":"code","source":["###freq_et = telco['InternetService'].value_counts().reset_index()\n","###freq_et.rename(columns={\"index\": \"InternetService\t\", \"InternetService\": \"freq_InternetService\"}, inplace = True)\n","###freq_et['pct_InternetService'] = round((freq_et['freq_InternetService']/freq_et['freq_InternetService'].sum())*100,2)\n","###freq_et"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"uUARcwGvtEJE","executionInfo":{"status":"ok","timestamp":1690819815668,"user_tz":-420,"elapsed":349,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"179e84ca-55c1-4d06-cb56-b05f630aa6f8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  InternetService\\t  freq_InternetService  pct_InternetService\n","0       Fiber optic                  3096                43.96\n","1               DSL                  2421                34.37\n","2                No                  1526                21.67"],"text/html":["\n","\n","  <div id=\"df-ec1fad48-7c1b-4b09-a879-9b1059e08cd4\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>InternetService\\t</th>\n","      <th>freq_InternetService</th>\n","      <th>pct_InternetService</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Fiber optic</td>\n","      <td>3096</td>\n","      <td>43.96</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>DSL</td>\n","      <td>2421</td>\n","      <td>34.37</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>No</td>\n","      <td>1526</td>\n","      <td>21.67</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ec1fad48-7c1b-4b09-a879-9b1059e08cd4')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-f9955067-6f30-497a-b95f-61220dfd0347\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f9955067-6f30-497a-b95f-61220dfd0347')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-f9955067-6f30-497a-b95f-61220dfd0347 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ec1fad48-7c1b-4b09-a879-9b1059e08cd4 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ec1fad48-7c1b-4b09-a879-9b1059e08cd4');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":151}]},{"cell_type":"code","source":["###freq_et= telco['InternetService'].value_counts().reset_index()\n","###freq_et.rename(columns={\"index\": \"InternetService\", \"InternetService\": \"freq_InternetService\"}, inplace = True)\n","###freq_et"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"x9RrwhjntvK3","executionInfo":{"status":"ok","timestamp":1690819999497,"user_tz":-420,"elapsed":12,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"2c3f458a-3f92-4bb0-a89e-2fc024aac98c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  InternetService  freq_InternetService\n","0     Fiber optic                  3096\n","1             DSL                  2421\n","2              No                  1526"],"text/html":["\n","\n","  <div id=\"df-d9efff4d-9204-41ed-9f5c-87ffebf401c6\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>InternetService</th>\n","      <th>freq_InternetService</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Fiber optic</td>\n","      <td>3096</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>DSL</td>\n","      <td>2421</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>No</td>\n","      <td>1526</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d9efff4d-9204-41ed-9f5c-87ffebf401c6')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-2f9ab5d7-d624-421b-8fde-663b4a936894\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2f9ab5d7-d624-421b-8fde-663b4a936894')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-2f9ab5d7-d624-421b-8fde-663b4a936894 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-d9efff4d-9204-41ed-9f5c-87ffebf401c6 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-d9efff4d-9204-41ed-9f5c-87ffebf401c6');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":157}]},{"cell_type":"code","source":["###sum_et = telco.groupby(['InternetService']).agg({'Churn':sum}).reset_index()\n","###sum_et.rename(columns={\"Churn\": \"sum_InternetService\"}, inplace = True)\n","###sum_et"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"0VOdPBy6uepG","executionInfo":{"status":"ok","timestamp":1690820104199,"user_tz":-420,"elapsed":342,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"0373a4db-9a30-4fad-8ccb-f1a5e48b76b8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  InternetService  sum_InternetService\n","0             DSL                  459\n","1     Fiber optic                 1297\n","2              No                  113"],"text/html":["\n","\n","  <div id=\"df-9dab8510-4181-4ed0-9508-f5635dc7c32c\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>InternetService</th>\n","      <th>sum_InternetService</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>DSL</td>\n","      <td>459</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Fiber optic</td>\n","      <td>1297</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>No</td>\n","      <td>113</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9dab8510-4181-4ed0-9508-f5635dc7c32c')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-64552079-25ca-4805-878d-cb13cb7f4281\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-64552079-25ca-4805-878d-cb13cb7f4281')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-64552079-25ca-4805-878d-cb13cb7f4281 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-9dab8510-4181-4ed0-9508-f5635dc7c32c button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-9dab8510-4181-4ed0-9508-f5635dc7c32c');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":159}]},{"cell_type":"code","source":["###mean_ec = freq_et.merge(sum_et, on='InternetService', how='inner')\n","###mean_ec['mean_InternetService'] = round((mean_ec['sum_InternetService']/mean_ec['freq_InternetService']),2)\n","###mean_ec"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"AbxXvDiEu-11","executionInfo":{"status":"ok","timestamp":1690820180029,"user_tz":-420,"elapsed":328,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"6747c6ea-c36e-4407-b892-29f5e639b68e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  InternetService  freq_InternetService  sum_InternetService  \\\n","0     Fiber optic                  3096                 1297   \n","1             DSL                  2421                  459   \n","2              No                  1526                  113   \n","\n","   mean_InternetService  \n","0                  0.42  \n","1                  0.19  \n","2                  0.07  "],"text/html":["\n","\n","  <div id=\"df-8a1dee72-03a5-4530-920c-861d29b05ad2\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>InternetService</th>\n","      <th>freq_InternetService</th>\n","      <th>sum_InternetService</th>\n","      <th>mean_InternetService</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Fiber optic</td>\n","      <td>3096</td>\n","      <td>1297</td>\n","      <td>0.42</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>DSL</td>\n","      <td>2421</td>\n","      <td>459</td>\n","      <td>0.19</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>No</td>\n","      <td>1526</td>\n","      <td>113</td>\n","      <td>0.07</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8a1dee72-03a5-4530-920c-861d29b05ad2')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-7489a223-54bf-4684-a595-3496478afcad\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7489a223-54bf-4684-a595-3496478afcad')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-7489a223-54bf-4684-a595-3496478afcad button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-8a1dee72-03a5-4530-920c-861d29b05ad2 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-8a1dee72-03a5-4530-920c-861d29b05ad2');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":160}]},{"cell_type":"code","source":["###telco = telco.merge(mean_ec[['InternetService','mean_InternetService']], on='InternetService', how='inner')\n","###telco[['InternetService','mean_InternetService']]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"9Dfi0PEkvKNt","executionInfo":{"status":"ok","timestamp":1690820261631,"user_tz":-420,"elapsed":9,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"32de800f-34ee-4526-812d-a3a7dda60c40"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     InternetService  mean_InternetService\n","0                DSL                  0.19\n","1                DSL                  0.19\n","2                DSL                  0.19\n","3                DSL                  0.19\n","4                DSL                  0.19\n","...              ...                   ...\n","7038              No                  0.07\n","7039              No                  0.07\n","7040              No                  0.07\n","7041              No                  0.07\n","7042              No                  0.07\n","\n","[7043 rows x 2 columns]"],"text/html":["\n","\n","  <div id=\"df-50bb3541-e46d-4206-b546-11553165123a\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>InternetService</th>\n","      <th>mean_InternetService</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>DSL</td>\n","      <td>0.19</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>DSL</td>\n","      <td>0.19</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>DSL</td>\n","      <td>0.19</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>DSL</td>\n","      <td>0.19</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>DSL</td>\n","      <td>0.19</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>7038</th>\n","      <td>No</td>\n","      <td>0.07</td>\n","    </tr>\n","    <tr>\n","      <th>7039</th>\n","      <td>No</td>\n","      <td>0.07</td>\n","    </tr>\n","    <tr>\n","      <th>7040</th>\n","      <td>No</td>\n","      <td>0.07</td>\n","    </tr>\n","    <tr>\n","      <th>7041</th>\n","      <td>No</td>\n","      <td>0.07</td>\n","    </tr>\n","    <tr>\n","      <th>7042</th>\n","      <td>No</td>\n","      <td>0.07</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>7043 rows × 2 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-50bb3541-e46d-4206-b546-11553165123a')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-93ea5f41-bc22-4326-8156-764800fbc36f\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-93ea5f41-bc22-4326-8156-764800fbc36f')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-93ea5f41-bc22-4326-8156-764800fbc36f button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-50bb3541-e46d-4206-b546-11553165123a button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-50bb3541-e46d-4206-b546-11553165123a');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":163}]},{"cell_type":"code","source":["telco.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"l0ew64Oovkoh","executionInfo":{"status":"ok","timestamp":1690866603375,"user_tz":-420,"elapsed":424,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"10aee3fa-9065-4dc5-e46c-53fef2218bf4"},"execution_count":82,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 7032 entries, 0 to 7042\n","Data columns (total 20 columns):\n"," #   Column                 Non-Null Count  Dtype  \n","---  ------                 --------------  -----  \n"," 0   SeniorCitizen          7032 non-null   int64  \n"," 1   Partner                7032 non-null   int64  \n"," 2   Dependents             7032 non-null   int64  \n"," 3   tenure                 7032 non-null   int64  \n"," 4   PhoneService           7032 non-null   int64  \n"," 5   MultipleLines          7032 non-null   int64  \n"," 6   OnlineSecurity         7032 non-null   int64  \n"," 7   OnlineBackup           7032 non-null   int64  \n"," 8   DeviceProtection       7032 non-null   int64  \n"," 9   TechSupport            7032 non-null   int64  \n"," 10  StreamingTV            7032 non-null   int64  \n"," 11  StreamingMovies        7032 non-null   int64  \n"," 12  PaperlessBilling       7032 non-null   int64  \n"," 13  MonthlyCharges         7032 non-null   float64\n"," 14  TotalCharges           7032 non-null   float32\n"," 15  Churn                  7032 non-null   int64  \n"," 16  gender_label_encoding  7032 non-null   int8   \n"," 17  contract_ordinal       7032 non-null   int64  \n"," 18  paymethod              7032 non-null   int64  \n"," 19  IService_ordinal       7032 non-null   int64  \n","dtypes: float32(1), float64(1), int64(17), int8(1)\n","memory usage: 1.1 MB\n"]}]},{"cell_type":"markdown","source":["# EDA Step 4 : Bivariate Analysis"],"metadata":{"id":"WAYGGqmH1Zf0"}},{"cell_type":"code","source":["telco.corr(method = 'spearman')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":741},"id":"hUUD7VIX131o","executionInfo":{"status":"ok","timestamp":1690866607802,"user_tz":-420,"elapsed":340,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"93c5ae24-b312-45df-f4fb-66ab70a0f9d6"},"execution_count":83,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                       SeniorCitizen   Partner  Dependents    tenure  \\\n","SeniorCitizen               1.000000  0.016957   -0.210550  0.017408   \n","Partner                     0.016957  1.000000    0.452269  0.387972   \n","Dependents                 -0.210550  0.452269    1.000000  0.169018   \n","tenure                      0.017408  0.387972    0.169018  1.000000   \n","PhoneService                0.008392  0.018397   -0.001078  0.007734   \n","MultipleLines               0.115807  0.107354   -0.019966  0.283657   \n","OnlineSecurity             -0.208083  0.095532    0.192214  0.182297   \n","OnlineBackup               -0.141967  0.098169    0.159129  0.210968   \n","DeviceProtection           -0.146837  0.106236    0.152276  0.213151   \n","TechSupport                -0.223212  0.080277    0.180712  0.181344   \n","StreamingTV                -0.118519  0.087871    0.134800  0.161221   \n","StreamingMovies            -0.108708  0.083510    0.119667  0.164958   \n","PaperlessBilling            0.156258 -0.013957   -0.110131  0.005955   \n","MonthlyCharges              0.220737  0.109456   -0.105449  0.275339   \n","TotalCharges                0.107248  0.343196    0.082890  0.889177   \n","Churn                       0.150541 -0.149982   -0.163128 -0.369659   \n","gender_label_encoding      -0.001819 -0.001379    0.010349  0.003718   \n","contract_ordinal           -0.143143  0.295210    0.241624  0.673986   \n","paymethod                  -0.043213 -0.156742   -0.039441 -0.378933   \n","IService_ordinal           -0.016791  0.000580    0.033887 -0.028027   \n","\n","                       PhoneService  MultipleLines  OnlineSecurity  \\\n","SeniorCitizen              0.008392       0.115807       -0.208083   \n","Partner                    0.018397       0.107354        0.095532   \n","Dependents                -0.001078      -0.019966        0.192214   \n","tenure                     0.007734       0.283657        0.182297   \n","PhoneService               1.000000      -0.567931        0.110329   \n","MultipleLines             -0.567931       1.000000       -0.213084   \n","OnlineSecurity             0.110329      -0.213084        1.000000   \n","OnlineBackup               0.141014      -0.179907        0.667961   \n","DeviceProtection           0.128479      -0.170032        0.664227   \n","TechSupport                0.108143      -0.210432        0.710808   \n","StreamingTV                0.166732      -0.169390        0.611327   \n","StreamingMovies            0.158634      -0.162253        0.616422   \n","PaperlessBilling           0.016696       0.126888       -0.322909   \n","MonthlyCharges             0.240266       0.253538       -0.525743   \n","TotalCharges               0.084910       0.334449       -0.112221   \n","Churn                      0.011691       0.024877       -0.341783   \n","gender_label_encoding     -0.007515      -0.001546       -0.006175   \n","contract_ordinal           0.002543       0.086924        0.405899   \n","paymethod                 -0.005148      -0.147524        0.035285   \n","IService_ordinal           0.400211      -0.295061        0.505543   \n","\n","                       OnlineBackup  DeviceProtection  TechSupport  \\\n","SeniorCitizen             -0.141967         -0.146837    -0.223212   \n","Partner                    0.098169          0.106236     0.080277   \n","Dependents                 0.159129          0.152276     0.180712   \n","tenure                     0.210968          0.213151     0.181344   \n","PhoneService               0.141014          0.128479     0.108143   \n","MultipleLines             -0.179907         -0.170032    -0.210432   \n","OnlineSecurity             0.667961          0.664227     0.710808   \n","OnlineBackup               1.000000          0.664379     0.671877   \n","DeviceProtection           0.664379          1.000000     0.690242   \n","TechSupport                0.671877          0.690242     1.000000   \n","StreamingTV                0.647114          0.700557     0.658632   \n","StreamingMovies            0.643049          0.706175     0.659399   \n","PaperlessBilling          -0.242446         -0.258233    -0.295600   \n","MonthlyCharges            -0.430462         -0.399135    -0.494842   \n","TotalCharges              -0.057331         -0.045307    -0.102826   \n","Churn                     -0.291843         -0.280488    -0.338087   \n","gender_label_encoding     -0.004195          0.004331    -0.000954   \n","contract_ordinal           0.357887          0.402564     0.437780   \n","paymethod                  0.018921          0.011079     0.030480   \n","IService_ordinal           0.582418          0.587933     0.509000   \n","\n","                       StreamingTV  StreamingMovies  PaperlessBilling  \\\n","SeniorCitizen            -0.118519        -0.108708          0.156258   \n","Partner                   0.087871         0.083510         -0.013957   \n","Dependents                0.134800         0.119667         -0.110131   \n","tenure                    0.161221         0.164958          0.005955   \n","PhoneService              0.166732         0.158634          0.016696   \n","MultipleLines            -0.169390        -0.162253          0.126888   \n","OnlineSecurity            0.611327         0.616422         -0.322909   \n","OnlineBackup              0.647114         0.643049         -0.242446   \n","DeviceProtection          0.700557         0.706175         -0.258233   \n","TechSupport               0.658632         0.659399         -0.295600   \n","StreamingTV               1.000000         0.765461         -0.180531   \n","StreamingMovies           0.765461         1.000000         -0.190176   \n","PaperlessBilling         -0.180531        -0.190176          1.000000   \n","MonthlyCharges           -0.296625        -0.299993          0.345805   \n","TotalCharges             -0.057268        -0.054779          0.153934   \n","Churn                    -0.196100        -0.198394          0.191454   \n","gender_label_encoding    -0.000024        -0.002134         -0.011902   \n","contract_ordinal          0.329674         0.334185         -0.176472   \n","paymethod                 0.033797         0.029414         -0.068350   \n","IService_ordinal          0.656583         0.652090         -0.117444   \n","\n","                       MonthlyCharges  TotalCharges     Churn  \\\n","SeniorCitizen                0.220737      0.107248  0.150541   \n","Partner                      0.109456      0.343196 -0.149982   \n","Dependents                  -0.105449      0.082890 -0.163128   \n","tenure                       0.275339      0.889177 -0.369659   \n","PhoneService                 0.240266      0.084910  0.011691   \n","MultipleLines                0.253538      0.334449  0.024877   \n","OnlineSecurity              -0.525743     -0.112221 -0.341783   \n","OnlineBackup                -0.430462     -0.057331 -0.291843   \n","DeviceProtection            -0.399135     -0.045307 -0.280488   \n","TechSupport                 -0.494842     -0.102826 -0.338087   \n","StreamingTV                 -0.296625     -0.057268 -0.196100   \n","StreamingMovies             -0.299993     -0.054779 -0.198394   \n","PaperlessBilling             0.345805      0.153934  0.191454   \n","MonthlyCharges               1.000000      0.638032  0.184167   \n","TotalCharges                 0.638032      1.000000 -0.232190   \n","Churn                        0.184167     -0.232190  1.000000   \n","gender_label_encoding       -0.013085     -0.001177 -0.008545   \n","contract_ordinal            -0.047260      0.467410 -0.405742   \n","paymethod                   -0.205721     -0.376645  0.103214   \n","IService_ordinal            -0.205400     -0.188878 -0.028472   \n","\n","                       gender_label_encoding  contract_ordinal  paymethod  \\\n","SeniorCitizen                      -0.001819         -0.143143  -0.043213   \n","Partner                            -0.001379          0.295210  -0.156742   \n","Dependents                          0.010349          0.241624  -0.039441   \n","tenure                              0.003718          0.673986  -0.378933   \n","PhoneService                       -0.007515          0.002543  -0.005148   \n","MultipleLines                      -0.001546          0.086924  -0.147524   \n","OnlineSecurity                     -0.006175          0.405899   0.035285   \n","OnlineBackup                       -0.004195          0.357887   0.018921   \n","DeviceProtection                    0.004331          0.402564   0.011079   \n","TechSupport                        -0.000954          0.437780   0.030480   \n","StreamingTV                        -0.000024          0.329674   0.033797   \n","StreamingMovies                    -0.002134          0.334185   0.029414   \n","PaperlessBilling                   -0.011902         -0.176472  -0.068350   \n","MonthlyCharges                     -0.013085         -0.047260  -0.205721   \n","TotalCharges                       -0.001177          0.467410  -0.376645   \n","Churn                              -0.008545         -0.405742   0.103214   \n","gender_label_encoding               1.000000          0.001037   0.016683   \n","contract_ordinal                    0.001037          1.000000  -0.228718   \n","paymethod                           0.016683         -0.228718   1.000000   \n","IService_ordinal                   -0.002871          0.079390   0.083030   \n","\n","                       IService_ordinal  \n","SeniorCitizen                 -0.016791  \n","Partner                        0.000580  \n","Dependents                     0.033887  \n","tenure                        -0.028027  \n","PhoneService                   0.400211  \n","MultipleLines                 -0.295061  \n","OnlineSecurity                 0.505543  \n","OnlineBackup                   0.582418  \n","DeviceProtection               0.587933  \n","TechSupport                    0.509000  \n","StreamingTV                    0.656583  \n","StreamingMovies                0.652090  \n","PaperlessBilling              -0.117444  \n","MonthlyCharges                -0.205400  \n","TotalCharges                  -0.188878  \n","Churn                         -0.028472  \n","gender_label_encoding         -0.002871  \n","contract_ordinal               0.079390  \n","paymethod                      0.083030  \n","IService_ordinal               1.000000  "],"text/html":["\n","\n","  <div id=\"df-5d7eff02-60f5-4f60-9c2d-362ad9fe71f2\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>SeniorCitizen</th>\n","      <th>Partner</th>\n","      <th>Dependents</th>\n","      <th>tenure</th>\n","      <th>PhoneService</th>\n","      <th>MultipleLines</th>\n","      <th>OnlineSecurity</th>\n","      <th>OnlineBackup</th>\n","      <th>DeviceProtection</th>\n","      <th>TechSupport</th>\n","      <th>StreamingTV</th>\n","      <th>StreamingMovies</th>\n","      <th>PaperlessBilling</th>\n","      <th>MonthlyCharges</th>\n","      <th>TotalCharges</th>\n","      <th>Churn</th>\n","      <th>gender_label_encoding</th>\n","      <th>contract_ordinal</th>\n","      <th>paymethod</th>\n","      <th>IService_ordinal</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>SeniorCitizen</th>\n","      <td>1.000000</td>\n","      <td>0.016957</td>\n","      <td>-0.210550</td>\n","      <td>0.017408</td>\n","      <td>0.008392</td>\n","      <td>0.115807</td>\n","      <td>-0.208083</td>\n","      <td>-0.141967</td>\n","      <td>-0.146837</td>\n","      <td>-0.223212</td>\n","      <td>-0.118519</td>\n","      <td>-0.108708</td>\n","      <td>0.156258</td>\n","      <td>0.220737</td>\n","      <td>0.107248</td>\n","      <td>0.150541</td>\n","      <td>-0.001819</td>\n","      <td>-0.143143</td>\n","      <td>-0.043213</td>\n","      <td>-0.016791</td>\n","    </tr>\n","    <tr>\n","      <th>Partner</th>\n","      <td>0.016957</td>\n","      <td>1.000000</td>\n","      <td>0.452269</td>\n","      <td>0.387972</td>\n","      <td>0.018397</td>\n","      <td>0.107354</td>\n","      <td>0.095532</td>\n","      <td>0.098169</td>\n","      <td>0.106236</td>\n","      <td>0.080277</td>\n","      <td>0.087871</td>\n","      <td>0.083510</td>\n","      <td>-0.013957</td>\n","      <td>0.109456</td>\n","      <td>0.343196</td>\n","      <td>-0.149982</td>\n","      <td>-0.001379</td>\n","      <td>0.295210</td>\n","      <td>-0.156742</td>\n","      <td>0.000580</td>\n","    </tr>\n","    <tr>\n","      <th>Dependents</th>\n","      <td>-0.210550</td>\n","      <td>0.452269</td>\n","      <td>1.000000</td>\n","      <td>0.169018</td>\n","      <td>-0.001078</td>\n","      <td>-0.019966</td>\n","      <td>0.192214</td>\n","      <td>0.159129</td>\n","      <td>0.152276</td>\n","      <td>0.180712</td>\n","      <td>0.134800</td>\n","      <td>0.119667</td>\n","      <td>-0.110131</td>\n","      <td>-0.105449</td>\n","      <td>0.082890</td>\n","      <td>-0.163128</td>\n","      <td>0.010349</td>\n","      <td>0.241624</td>\n","      <td>-0.039441</td>\n","      <td>0.033887</td>\n","    </tr>\n","    <tr>\n","      <th>tenure</th>\n","      <td>0.017408</td>\n","      <td>0.387972</td>\n","      <td>0.169018</td>\n","      <td>1.000000</td>\n","      <td>0.007734</td>\n","      <td>0.283657</td>\n","      <td>0.182297</td>\n","      <td>0.210968</td>\n","      <td>0.213151</td>\n","      <td>0.181344</td>\n","      <td>0.161221</td>\n","      <td>0.164958</td>\n","      <td>0.005955</td>\n","      <td>0.275339</td>\n","      <td>0.889177</td>\n","      <td>-0.369659</td>\n","      <td>0.003718</td>\n","      <td>0.673986</td>\n","      <td>-0.378933</td>\n","      <td>-0.028027</td>\n","    </tr>\n","    <tr>\n","      <th>PhoneService</th>\n","      <td>0.008392</td>\n","      <td>0.018397</td>\n","      <td>-0.001078</td>\n","      <td>0.007734</td>\n","      <td>1.000000</td>\n","      <td>-0.567931</td>\n","      <td>0.110329</td>\n","      <td>0.141014</td>\n","      <td>0.128479</td>\n","      <td>0.108143</td>\n","      <td>0.166732</td>\n","      <td>0.158634</td>\n","      <td>0.016696</td>\n","      <td>0.240266</td>\n","      <td>0.084910</td>\n","      <td>0.011691</td>\n","      <td>-0.007515</td>\n","      <td>0.002543</td>\n","      <td>-0.005148</td>\n","      <td>0.400211</td>\n","    </tr>\n","    <tr>\n","      <th>MultipleLines</th>\n","      <td>0.115807</td>\n","      <td>0.107354</td>\n","      <td>-0.019966</td>\n","      <td>0.283657</td>\n","      <td>-0.567931</td>\n","      <td>1.000000</td>\n","      <td>-0.213084</td>\n","      <td>-0.179907</td>\n","      <td>-0.170032</td>\n","      <td>-0.210432</td>\n","      <td>-0.169390</td>\n","      <td>-0.162253</td>\n","      <td>0.126888</td>\n","      <td>0.253538</td>\n","      <td>0.334449</td>\n","      <td>0.024877</td>\n","      <td>-0.001546</td>\n","      <td>0.086924</td>\n","      <td>-0.147524</td>\n","      <td>-0.295061</td>\n","    </tr>\n","    <tr>\n","      <th>OnlineSecurity</th>\n","      <td>-0.208083</td>\n","      <td>0.095532</td>\n","      <td>0.192214</td>\n","      <td>0.182297</td>\n","      <td>0.110329</td>\n","      <td>-0.213084</td>\n","      <td>1.000000</td>\n","      <td>0.667961</td>\n","      <td>0.664227</td>\n","      <td>0.710808</td>\n","      <td>0.611327</td>\n","      <td>0.616422</td>\n","      <td>-0.322909</td>\n","      <td>-0.525743</td>\n","      <td>-0.112221</td>\n","      <td>-0.341783</td>\n","      <td>-0.006175</td>\n","      <td>0.405899</td>\n","      <td>0.035285</td>\n","      <td>0.505543</td>\n","    </tr>\n","    <tr>\n","      <th>OnlineBackup</th>\n","      <td>-0.141967</td>\n","      <td>0.098169</td>\n","      <td>0.159129</td>\n","      <td>0.210968</td>\n","      <td>0.141014</td>\n","      <td>-0.179907</td>\n","      <td>0.667961</td>\n","      <td>1.000000</td>\n","      <td>0.664379</td>\n","      <td>0.671877</td>\n","      <td>0.647114</td>\n","      <td>0.643049</td>\n","      <td>-0.242446</td>\n","      <td>-0.430462</td>\n","      <td>-0.057331</td>\n","      <td>-0.291843</td>\n","      <td>-0.004195</td>\n","      <td>0.357887</td>\n","      <td>0.018921</td>\n","      <td>0.582418</td>\n","    </tr>\n","    <tr>\n","      <th>DeviceProtection</th>\n","      <td>-0.146837</td>\n","      <td>0.106236</td>\n","      <td>0.152276</td>\n","      <td>0.213151</td>\n","      <td>0.128479</td>\n","      <td>-0.170032</td>\n","      <td>0.664227</td>\n","      <td>0.664379</td>\n","      <td>1.000000</td>\n","      <td>0.690242</td>\n","      <td>0.700557</td>\n","      <td>0.706175</td>\n","      <td>-0.258233</td>\n","      <td>-0.399135</td>\n","      <td>-0.045307</td>\n","      <td>-0.280488</td>\n","      <td>0.004331</td>\n","      <td>0.402564</td>\n","      <td>0.011079</td>\n","      <td>0.587933</td>\n","    </tr>\n","    <tr>\n","      <th>TechSupport</th>\n","      <td>-0.223212</td>\n","      <td>0.080277</td>\n","      <td>0.180712</td>\n","      <td>0.181344</td>\n","      <td>0.108143</td>\n","      <td>-0.210432</td>\n","      <td>0.710808</td>\n","      <td>0.671877</td>\n","      <td>0.690242</td>\n","      <td>1.000000</td>\n","      <td>0.658632</td>\n","      <td>0.659399</td>\n","      <td>-0.295600</td>\n","      <td>-0.494842</td>\n","      <td>-0.102826</td>\n","      <td>-0.338087</td>\n","      <td>-0.000954</td>\n","      <td>0.437780</td>\n","      <td>0.030480</td>\n","      <td>0.509000</td>\n","    </tr>\n","    <tr>\n","      <th>StreamingTV</th>\n","      <td>-0.118519</td>\n","      <td>0.087871</td>\n","      <td>0.134800</td>\n","      <td>0.161221</td>\n","      <td>0.166732</td>\n","      <td>-0.169390</td>\n","      <td>0.611327</td>\n","      <td>0.647114</td>\n","      <td>0.700557</td>\n","      <td>0.658632</td>\n","      <td>1.000000</td>\n","      <td>0.765461</td>\n","      <td>-0.180531</td>\n","      <td>-0.296625</td>\n","      <td>-0.057268</td>\n","      <td>-0.196100</td>\n","      <td>-0.000024</td>\n","      <td>0.329674</td>\n","      <td>0.033797</td>\n","      <td>0.656583</td>\n","    </tr>\n","    <tr>\n","      <th>StreamingMovies</th>\n","      <td>-0.108708</td>\n","      <td>0.083510</td>\n","      <td>0.119667</td>\n","      <td>0.164958</td>\n","      <td>0.158634</td>\n","      <td>-0.162253</td>\n","      <td>0.616422</td>\n","      <td>0.643049</td>\n","      <td>0.706175</td>\n","      <td>0.659399</td>\n","      <td>0.765461</td>\n","      <td>1.000000</td>\n","      <td>-0.190176</td>\n","      <td>-0.299993</td>\n","      <td>-0.054779</td>\n","      <td>-0.198394</td>\n","      <td>-0.002134</td>\n","      <td>0.334185</td>\n","      <td>0.029414</td>\n","      <td>0.652090</td>\n","    </tr>\n","    <tr>\n","      <th>PaperlessBilling</th>\n","      <td>0.156258</td>\n","      <td>-0.013957</td>\n","      <td>-0.110131</td>\n","      <td>0.005955</td>\n","      <td>0.016696</td>\n","      <td>0.126888</td>\n","      <td>-0.322909</td>\n","      <td>-0.242446</td>\n","      <td>-0.258233</td>\n","      <td>-0.295600</td>\n","      <td>-0.180531</td>\n","      <td>-0.190176</td>\n","      <td>1.000000</td>\n","      <td>0.345805</td>\n","      <td>0.153934</td>\n","      <td>0.191454</td>\n","      <td>-0.011902</td>\n","      <td>-0.176472</td>\n","      <td>-0.068350</td>\n","      <td>-0.117444</td>\n","    </tr>\n","    <tr>\n","      <th>MonthlyCharges</th>\n","      <td>0.220737</td>\n","      <td>0.109456</td>\n","      <td>-0.105449</td>\n","      <td>0.275339</td>\n","      <td>0.240266</td>\n","      <td>0.253538</td>\n","      <td>-0.525743</td>\n","      <td>-0.430462</td>\n","      <td>-0.399135</td>\n","      <td>-0.494842</td>\n","      <td>-0.296625</td>\n","      <td>-0.299993</td>\n","      <td>0.345805</td>\n","      <td>1.000000</td>\n","      <td>0.638032</td>\n","      <td>0.184167</td>\n","      <td>-0.013085</td>\n","      <td>-0.047260</td>\n","      <td>-0.205721</td>\n","      <td>-0.205400</td>\n","    </tr>\n","    <tr>\n","      <th>TotalCharges</th>\n","      <td>0.107248</td>\n","      <td>0.343196</td>\n","      <td>0.082890</td>\n","      <td>0.889177</td>\n","      <td>0.084910</td>\n","      <td>0.334449</td>\n","      <td>-0.112221</td>\n","      <td>-0.057331</td>\n","      <td>-0.045307</td>\n","      <td>-0.102826</td>\n","      <td>-0.057268</td>\n","      <td>-0.054779</td>\n","      <td>0.153934</td>\n","      <td>0.638032</td>\n","      <td>1.000000</td>\n","      <td>-0.232190</td>\n","      <td>-0.001177</td>\n","      <td>0.467410</td>\n","      <td>-0.376645</td>\n","      <td>-0.188878</td>\n","    </tr>\n","    <tr>\n","      <th>Churn</th>\n","      <td>0.150541</td>\n","      <td>-0.149982</td>\n","      <td>-0.163128</td>\n","      <td>-0.369659</td>\n","      <td>0.011691</td>\n","      <td>0.024877</td>\n","      <td>-0.341783</td>\n","      <td>-0.291843</td>\n","      <td>-0.280488</td>\n","      <td>-0.338087</td>\n","      <td>-0.196100</td>\n","      <td>-0.198394</td>\n","      <td>0.191454</td>\n","      <td>0.184167</td>\n","      <td>-0.232190</td>\n","      <td>1.000000</td>\n","      <td>-0.008545</td>\n","      <td>-0.405742</td>\n","      <td>0.103214</td>\n","      <td>-0.028472</td>\n","    </tr>\n","    <tr>\n","      <th>gender_label_encoding</th>\n","      <td>-0.001819</td>\n","      <td>-0.001379</td>\n","      <td>0.010349</td>\n","      <td>0.003718</td>\n","      <td>-0.007515</td>\n","      <td>-0.001546</td>\n","      <td>-0.006175</td>\n","      <td>-0.004195</td>\n","      <td>0.004331</td>\n","      <td>-0.000954</td>\n","      <td>-0.000024</td>\n","      <td>-0.002134</td>\n","      <td>-0.011902</td>\n","      <td>-0.013085</td>\n","      <td>-0.001177</td>\n","      <td>-0.008545</td>\n","      <td>1.000000</td>\n","      <td>0.001037</td>\n","      <td>0.016683</td>\n","      <td>-0.002871</td>\n","    </tr>\n","    <tr>\n","      <th>contract_ordinal</th>\n","      <td>-0.143143</td>\n","      <td>0.295210</td>\n","      <td>0.241624</td>\n","      <td>0.673986</td>\n","      <td>0.002543</td>\n","      <td>0.086924</td>\n","      <td>0.405899</td>\n","      <td>0.357887</td>\n","      <td>0.402564</td>\n","      <td>0.437780</td>\n","      <td>0.329674</td>\n","      <td>0.334185</td>\n","      <td>-0.176472</td>\n","      <td>-0.047260</td>\n","      <td>0.467410</td>\n","      <td>-0.405742</td>\n","      <td>0.001037</td>\n","      <td>1.000000</td>\n","      <td>-0.228718</td>\n","      <td>0.079390</td>\n","    </tr>\n","    <tr>\n","      <th>paymethod</th>\n","      <td>-0.043213</td>\n","      <td>-0.156742</td>\n","      <td>-0.039441</td>\n","      <td>-0.378933</td>\n","      <td>-0.005148</td>\n","      <td>-0.147524</td>\n","      <td>0.035285</td>\n","      <td>0.018921</td>\n","      <td>0.011079</td>\n","      <td>0.030480</td>\n","      <td>0.033797</td>\n","      <td>0.029414</td>\n","      <td>-0.068350</td>\n","      <td>-0.205721</td>\n","      <td>-0.376645</td>\n","      <td>0.103214</td>\n","      <td>0.016683</td>\n","      <td>-0.228718</td>\n","      <td>1.000000</td>\n","      <td>0.083030</td>\n","    </tr>\n","    <tr>\n","      <th>IService_ordinal</th>\n","      <td>-0.016791</td>\n","      <td>0.000580</td>\n","      <td>0.033887</td>\n","      <td>-0.028027</td>\n","      <td>0.400211</td>\n","      <td>-0.295061</td>\n","      <td>0.505543</td>\n","      <td>0.582418</td>\n","      <td>0.587933</td>\n","      <td>0.509000</td>\n","      <td>0.656583</td>\n","      <td>0.652090</td>\n","      <td>-0.117444</td>\n","      <td>-0.205400</td>\n","      <td>-0.188878</td>\n","      <td>-0.028472</td>\n","      <td>-0.002871</td>\n","      <td>0.079390</td>\n","      <td>0.083030</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5d7eff02-60f5-4f60-9c2d-362ad9fe71f2')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-96d17d5c-79b8-41a5-a57d-71e8896d1002\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-96d17d5c-79b8-41a5-a57d-71e8896d1002')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-96d17d5c-79b8-41a5-a57d-71e8896d1002 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-5d7eff02-60f5-4f60-9c2d-362ad9fe71f2 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-5d7eff02-60f5-4f60-9c2d-362ad9fe71f2');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":83}]},{"cell_type":"markdown","source":["### Multicollinearity Study\n","\n","#### There are a multicollinearity features\n","\n","1. Monthly Charget & Total Charges\n","2. Services : Online Security, Online Backup, Device Protection, Streaming TV, Streaming Movie & Tech Support - Internet Services\n","3. Phone Services, Multiple Lines & Internet Services"],"metadata":{"id":"yEca8F3jzRMK"}},{"cell_type":"markdown","source":["## Feature + Target"],"metadata":{"id":"TFkzyt6tFvmU"}},{"cell_type":"code","source":["# split train test\n","\n","import pandas as pd\n","from sklearn.model_selection import train_test_split\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.metrics import accuracy_score, confusion_matrix, classification_report\n","\n","feature = telco.drop(columns='Churn')\n","target = telco[['Churn']]\n","\n","feature_telco_train, feature_telco_test, target_telco_train, target_telco_test = train_test_split(feature, target, test_size=0.20, random_state=42)"],"metadata":{"id":"VlS4lhsmzHbp","executionInfo":{"status":"ok","timestamp":1690866661383,"user_tz":-420,"elapsed":328,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}}},"execution_count":85,"outputs":[]},{"cell_type":"code","source":["# heatmap correlation\n","admit_train = pd.concat([feature_telco_train, target_telco_train], axis=1)\n","corr = admit_train.corr()\n","\n","plt.figure(figsize=(10,7))\n","sns.heatmap(corr, annot=True, fmt='.2f')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":515},"id":"PxqbONY20Ixn","executionInfo":{"status":"ok","timestamp":1690866666139,"user_tz":-420,"elapsed":1895,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"16228303-2836-41c8-f57b-cdc7a0da917e"},"execution_count":86,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x700 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["# Modeling 1 :\n","\n","*   Logistic Regression\n","\n","*   Decission Tree\n","\n","\n"],"metadata":{"id":"83Zlpu7SE18g"}},{"cell_type":"code","source":["from sklearn.preprocessing import StandardScaler\n","\n","scaler = StandardScaler()\n","scaler.fit(feature)\n","feature_std = scaler.transform(feature)"],"metadata":{"id":"1ADx0Yqf1qwW","executionInfo":{"status":"ok","timestamp":1690866706361,"user_tz":-420,"elapsed":5,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}}},"execution_count":88,"outputs":[]},{"cell_type":"markdown","source":["### Split between feature and target\n","\n","80% Train and\n","20% Test"],"metadata":{"id":"L4GYICYP1yWM"}},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","feature_telco_train, feature_telco_test, target_telco_train, target_telco_test = train_test_split(feature_std,\n","                                                target,\n","                                                test_size = 0.2,\n","                                                random_state = 42)"],"metadata":{"id":"ip00Qe2C1wEV","executionInfo":{"status":"ok","timestamp":1690866729137,"user_tz":-420,"elapsed":318,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}}},"execution_count":90,"outputs":[]},{"cell_type":"markdown","source":["## Model : Logistic Regression"],"metadata":{"id":"tYucyAn02OA2"}},{"cell_type":"code","execution_count":91,"metadata":{"id":"2428085b","outputId":"2cabcfc0-64bb-4065-e49d-14ed91c106f5","colab":{"base_uri":"https://localhost:8080/","height":52},"executionInfo":{"status":"ok","timestamp":1690866736061,"user_tz":-420,"elapsed":15,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["LogisticRegression(random_state=42)"],"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression(random_state=42)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression(random_state=42)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":91}],"source":["from sklearn.linear_model import LogisticRegression\n","\n","logreg = LogisticRegression(random_state=42)\n","logreg.fit(feature_telco_train, target_telco_train)"]},{"cell_type":"markdown","source":["###Evaluation"],"metadata":{"id":"BqDrFuGkhjAa"}},{"cell_type":"code","source":["target_pred_reg = logreg.predict(feature_telco_test)"],"metadata":{"id":"eT9B5soEgv0A","executionInfo":{"status":"ok","timestamp":1690866886903,"user_tz":-420,"elapsed":339,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}}},"execution_count":93,"outputs":[]},{"cell_type":"code","source":["print('Akurasi Logreg',accuracy_score(target_telco_test, target_pred_reg))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2XmCW33ohoD4","executionInfo":{"status":"ok","timestamp":1690867025079,"user_tz":-420,"elapsed":8,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"8492c178-4d4e-4d1f-f7f0-50618d0785ef"},"execution_count":94,"outputs":[{"output_type":"stream","name":"stdout","text":["Akurasi Logreg 0.7853589196872779\n"]}]},{"cell_type":"markdown","source":["## Model : Decission Tree"],"metadata":{"id":"pE2RVN9LM2Az"}},{"cell_type":"code","source":["from sklearn.tree import DecisionTreeClassifier\n","\n","dt = DecisionTreeClassifier(random_state=42)\n","dt.fit(feature_train,target_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":75},"id":"NplvsNOxM6Tw","executionInfo":{"status":"ok","timestamp":1690878338815,"user_tz":-420,"elapsed":12,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"fad4a111-efcf-400a-b121-ece9e9a38f0a"},"execution_count":154,"outputs":[{"output_type":"execute_result","data":{"text/plain":["DecisionTreeClassifier(random_state=42)"],"text/html":["<style>#sk-container-id-4 {color: black;background-color: white;}#sk-container-id-4 pre{padding: 0;}#sk-container-id-4 div.sk-toggleable {background-color: white;}#sk-container-id-4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-4 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-4 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-4 div.sk-item {position: relative;z-index: 1;}#sk-container-id-4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-4 div.sk-item::before, #sk-container-id-4 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-4 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-4 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-4 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-4 div.sk-label-container {text-align: center;}#sk-container-id-4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-4 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-4\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>DecisionTreeClassifier(random_state=42)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" checked><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">DecisionTreeClassifier</label><div class=\"sk-toggleable__content\"><pre>DecisionTreeClassifier(random_state=42)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":154}]},{"cell_type":"code","source":["target_pred_dt = dt.predict(feature_telco_test)"],"metadata":{"id":"fAZGoTMGM95S","executionInfo":{"status":"ok","timestamp":1690878371359,"user_tz":-420,"elapsed":312,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}}},"execution_count":156,"outputs":[]},{"cell_type":"code","source":["print('Akurasi Decission Tree',accuracy_score(target_telco_test, target_pred_dt))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_TQXQjE4NGwx","executionInfo":{"status":"ok","timestamp":1690878389332,"user_tz":-420,"elapsed":335,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"8beb7759-3b74-420b-89f2-95c40d780c78"},"execution_count":157,"outputs":[{"output_type":"stream","name":"stdout","text":["Akurasi Decission Tree 0.5914043583535109\n"]}]},{"cell_type":"markdown","source":["The Logistic Regression Model successfully predict 78.54% of all datasets. Decission Tree Model predict only 59.14% of all datasets.  \n","\n","Unfortunatelly, the evaluation metric not relevant if we had a class-imbalanced problem. To emphasize the performance in one particular class. We can also use metrics such as Precision, Recall, F1-Score / AUC to get more comprehensive undestanding of model performance.\n","\n"],"metadata":{"id":"TBSE8KzJNvAB"}},{"cell_type":"markdown","source":["# Model 2 : Oversampling with Smote"],"metadata":{"id":"-CUZ9xySEhg3"}},{"cell_type":"code","source":["from imblearn import over_sampling\n","\n","# Overampling with smote\n","\n","feature_over_smote, target_over_smote = over_sampling.SMOTE().fit_resample(feature_telco_train, target_telco_train)"],"metadata":{"id":"xwrkA1fcEg8c","executionInfo":{"status":"ok","timestamp":1690876210342,"user_tz":-420,"elapsed":536,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}}},"execution_count":144,"outputs":[]},{"cell_type":"code","source":["feature_telco_train_, feature_telco_test, target_telco_train_, target_telco_test = train_test_split(feature_over_smote, target_over_smote, test_size=0.2, random_state=42)\n"],"metadata":{"id":"UBpEGsyWE3NB","executionInfo":{"status":"ok","timestamp":1690876262749,"user_tz":-420,"elapsed":542,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}}},"execution_count":145,"outputs":[]},{"cell_type":"code","source":["from sklearn.tree import DecisionTreeClassifier\n","from sklearn.metrics import roc_auc_score, classification_report, f1_score"],"metadata":{"id":"SAfqgvEgFW5D","executionInfo":{"status":"ok","timestamp":1690876349899,"user_tz":-420,"elapsed":470,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}}},"execution_count":147,"outputs":[]},{"cell_type":"code","source":["# model = DecisionTreeClassifier()\n","model = RandomForestClassifier(n_estimators=100)\n","model.fit(feature_telco_train,target_telco_train)\n","target_pred = model.predict(feature_telco_test)"],"metadata":{"id":"d7q5bL7eFY9T","executionInfo":{"status":"ok","timestamp":1690876384817,"user_tz":-420,"elapsed":873,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}}},"execution_count":148,"outputs":[]},{"cell_type":"markdown","source":["### Evaluation"],"metadata":{"id":"CYZ_ASH4FGC4"}},{"cell_type":"code","source":["print(classification_report(target_telco_test, target_pred, digits=6))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LfrVuzjLFD4S","executionInfo":{"status":"ok","timestamp":1690876387832,"user_tz":-420,"elapsed":550,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"07aaaa53-d967-4249-c5fa-af9bc15cf0ca"},"execution_count":149,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0   0.868783  0.998783  0.929259       822\n","           1   0.998586  0.850602  0.918673       830\n","\n","    accuracy                       0.924334      1652\n","   macro avg   0.933684  0.924693  0.923966      1652\n","weighted avg   0.933999  0.924334  0.923940      1652\n","\n"]}]},{"cell_type":"markdown","source":["- Precision : measure how accurate the model is in predicting the \"1\" out of all predictions classified.\n","\n","For class 0 (negative), precision is approximately 0.869 or 86.9%, meaning 86.9% of the predictions for class 0 are correct.\n","For class 1 (positive), precision is approximately 0.999 or 99.9%, meaning 99.9% of the predictions for class 1 are correct.\n","\n","- Recall / Sensitivity : measure how well the model identify\n","\n","For class 0 (negative), recall is approximately 0.999 or 99.9%, meaning the model correctly identifies 99.9% of all actual class 0 data.\n","For class 1 (positive), recall is approximately 0.851 or 85.1%, meaning the model correctly identifies 85.1% of all actual class 1 data.\n","\n","- F1-Score : 0.92 / 92% . F1-Score is combination of precision and recall It gives an overall picture of the model's performance, considering both false positives and false negatives.\n","\n","- Support : the number of instances for each class in datasets\n","\n","- Accuracy : The model's accuracy is approximately 92.43%, meaning it correctly predicts around 92.43% of all test data.\n","\n","In conclusion, Oversampling with Smote model performs well with an accuracy rate of around 92.43%. However, it's important to consider precision, recall, and F1-score, especially when dealing with class imbalanced problems, to ensure the model can identify the positive class effectively.\n"],"metadata":{"id":"ZwHUIh8RPW4h"}},{"cell_type":"markdown","source":["# Modeling 2 : Random Forest"],"metadata":{"id":"eNRfR8ZESwJM"}},{"cell_type":"markdown","source":["## Imbalanced Data handling"],"metadata":{"id":"zTR9Gtn_ilbc"}},{"cell_type":"code","source":["target = telco['Churn'].value_counts().reset_index()\n","target.rename(columns={'index':'Churn','Churn':'freq'}, inplace=True)\n","target['percentage'] = round((target['freq']/target['freq'].sum())*100,2)\n","target"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"5QJYNPmCiqIJ","executionInfo":{"status":"ok","timestamp":1690867286247,"user_tz":-420,"elapsed":335,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"184ad757-2bc1-48bc-a077-bfda8405860f"},"execution_count":99,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Churn  freq  percentage\n","0      0  5163       73.42\n","1      1  1869       26.58"],"text/html":["\n","\n","  <div id=\"df-db8ec9f9-6202-4efd-bd9f-3b7c7a3b7138\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Churn</th>\n","      <th>freq</th>\n","      <th>percentage</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>5163</td>\n","      <td>73.42</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1869</td>\n","      <td>26.58</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-db8ec9f9-6202-4efd-bd9f-3b7c7a3b7138')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-eeb2bdc5-13f2-4ab9-b434-d03c45db8ecb\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-eeb2bdc5-13f2-4ab9-b434-d03c45db8ecb')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-eeb2bdc5-13f2-4ab9-b434-d03c45db8ecb button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-db8ec9f9-6202-4efd-bd9f-3b7c7a3b7138 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-db8ec9f9-6202-4efd-bd9f-3b7c7a3b7138');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":99}]},{"cell_type":"code","source":["telco_numeric = telco[['Churn','SeniorCitizen','tenure','contract_ordinal','MonthlyCharges','TotalCharges']]\n","telco_numeric = telco_numeric.dropna()\n","telco_numeric.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":250},"id":"Ybwmzozyi08D","executionInfo":{"status":"ok","timestamp":1690867471188,"user_tz":-420,"elapsed":339,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"a1e85fab-c2be-4ef1-aa78-fd9a267cd6b9"},"execution_count":102,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Churn  SeniorCitizen  tenure  contract_ordinal  MonthlyCharges  \\\n","0      0              0       1                 1           29.85   \n","1      0              0      34                 2           56.95   \n","2      1              0       2                 1           53.85   \n","3      0              0      45                 2           42.30   \n","4      1              0       2                 1           70.70   \n","\n","   TotalCharges  \n","0     29.850000  \n","1   1889.500000  \n","2    108.150002  \n","3   1840.750000  \n","4    151.649994  "],"text/html":["\n","\n","  <div id=\"df-710ebf5a-c796-4b3c-976f-91c0daa1d3cf\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Churn</th>\n","      <th>SeniorCitizen</th>\n","      <th>tenure</th>\n","      <th>contract_ordinal</th>\n","      <th>MonthlyCharges</th>\n","      <th>TotalCharges</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>29.85</td>\n","      <td>29.850000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>34</td>\n","      <td>2</td>\n","      <td>56.95</td>\n","      <td>1889.500000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>53.85</td>\n","      <td>108.150002</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>45</td>\n","      <td>2</td>\n","      <td>42.30</td>\n","      <td>1840.750000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>70.70</td>\n","      <td>151.649994</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-710ebf5a-c796-4b3c-976f-91c0daa1d3cf')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-017b4e6e-f429-483d-bf67-3bf1e90bd5a1\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-017b4e6e-f429-483d-bf67-3bf1e90bd5a1')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-017b4e6e-f429-483d-bf67-3bf1e90bd5a1 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-710ebf5a-c796-4b3c-976f-91c0daa1d3cf button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-710ebf5a-c796-4b3c-976f-91c0daa1d3cf');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":102}]},{"cell_type":"code","source":["from imblearn import under_sampling, over_sampling\n","\n","X = telco_numeric.drop(['Churn'],axis=1)\n","y = telco_numeric['Churn']\n","\n","# Undersampling\n","X_under, y_under = under_sampling.RandomUnderSampler().fit_resample(X, y)\n","\n","# Overampling\n","X_over, y_over = over_sampling.RandomOverSampler().fit_resample(X, y)\n","\n","# Overampling with smote\n","X_over_smote, y_over_smote = over_sampling.SMOTE().fit_resample(X, y)"],"metadata":{"id":"wfMIn3UJjovB","executionInfo":{"status":"ok","timestamp":1690867694214,"user_tz":-420,"elapsed":328,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}}},"execution_count":108,"outputs":[]},{"cell_type":"code","source":["telco_undersampling = pd.concat([X_under, y_under], axis=1)\n","telco_undersampling.head(3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":187},"id":"t-vMkzzKkYBf","executionInfo":{"status":"ok","timestamp":1690867723514,"user_tz":-420,"elapsed":16,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"60070158-f4df-4466-d062-54c7b767944b"},"execution_count":109,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   SeniorCitizen  tenure  contract_ordinal  MonthlyCharges  TotalCharges  \\\n","0              0      13                 1           73.35    931.549988   \n","1              0      56                 2           80.90   4557.500000   \n","2              0      13                 1           44.80    559.200012   \n","\n","   Churn  \n","0      0  \n","1      0  \n","2      0  "],"text/html":["\n","\n","  <div id=\"df-8d149850-3e2f-4f73-8d39-50ff753a5cc5\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>SeniorCitizen</th>\n","      <th>tenure</th>\n","      <th>contract_ordinal</th>\n","      <th>MonthlyCharges</th>\n","      <th>TotalCharges</th>\n","      <th>Churn</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>13</td>\n","      <td>1</td>\n","      <td>73.35</td>\n","      <td>931.549988</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>56</td>\n","      <td>2</td>\n","      <td>80.90</td>\n","      <td>4557.500000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>13</td>\n","      <td>1</td>\n","      <td>44.80</td>\n","      <td>559.200012</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8d149850-3e2f-4f73-8d39-50ff753a5cc5')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-ac4fbb70-d681-421f-be5e-9cb7ce3e4374\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ac4fbb70-d681-421f-be5e-9cb7ce3e4374')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-ac4fbb70-d681-421f-be5e-9cb7ce3e4374 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-8d149850-3e2f-4f73-8d39-50ff753a5cc5 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-8d149850-3e2f-4f73-8d39-50ff753a5cc5');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":109}]},{"cell_type":"code","source":["telco_oversampling = pd.concat([X_over, y_over], axis=1)\n","telco_oversampling.head(3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":187},"id":"CreyFmQUkfHj","executionInfo":{"status":"ok","timestamp":1690867742875,"user_tz":-420,"elapsed":7,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"be1e08f4-8cf6-41bd-f297-f6040e2c423b"},"execution_count":110,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   SeniorCitizen  tenure  contract_ordinal  MonthlyCharges  TotalCharges  \\\n","0              0       1                 1           29.85     29.850000   \n","1              0      34                 2           56.95   1889.500000   \n","2              0       2                 1           53.85    108.150002   \n","\n","   Churn  \n","0      0  \n","1      0  \n","2      1  "],"text/html":["\n","\n","  <div id=\"df-49bda9e9-71d8-4d85-83a2-0fc5c449df18\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>SeniorCitizen</th>\n","      <th>tenure</th>\n","      <th>contract_ordinal</th>\n","      <th>MonthlyCharges</th>\n","      <th>TotalCharges</th>\n","      <th>Churn</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>29.85</td>\n","      <td>29.850000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>34</td>\n","      <td>2</td>\n","      <td>56.95</td>\n","      <td>1889.500000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>53.85</td>\n","      <td>108.150002</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-49bda9e9-71d8-4d85-83a2-0fc5c449df18')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-eae6be17-39ce-42c2-8f5c-8d0dcb2173f5\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-eae6be17-39ce-42c2-8f5c-8d0dcb2173f5')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-eae6be17-39ce-42c2-8f5c-8d0dcb2173f5 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-49bda9e9-71d8-4d85-83a2-0fc5c449df18 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-49bda9e9-71d8-4d85-83a2-0fc5c449df18');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":110}]},{"cell_type":"code","source":["telco_oversampling_smote = pd.concat([X_over_smote, y_over_smote], axis=1)\n","telco_oversampling_smote.head(3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":187},"id":"frEmhgqxkj1m","executionInfo":{"status":"ok","timestamp":1690867756514,"user_tz":-420,"elapsed":11,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"c866a19e-30fb-45b6-a81c-82517d706690"},"execution_count":111,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   SeniorCitizen  tenure  contract_ordinal  MonthlyCharges  TotalCharges  \\\n","0              0       1                 1           29.85     29.850000   \n","1              0      34                 2           56.95   1889.500000   \n","2              0       2                 1           53.85    108.150002   \n","\n","   Churn  \n","0      0  \n","1      0  \n","2      1  "],"text/html":["\n","\n","  <div id=\"df-141872b3-505f-410c-9a7a-1b985fd4d320\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>SeniorCitizen</th>\n","      <th>tenure</th>\n","      <th>contract_ordinal</th>\n","      <th>MonthlyCharges</th>\n","      <th>TotalCharges</th>\n","      <th>Churn</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>29.85</td>\n","      <td>29.850000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>34</td>\n","      <td>2</td>\n","      <td>56.95</td>\n","      <td>1889.500000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>53.85</td>\n","      <td>108.150002</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-141872b3-505f-410c-9a7a-1b985fd4d320')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-ef86ffc7-c68a-46b4-bbae-2c35ca691bbf\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ef86ffc7-c68a-46b4-bbae-2c35ca691bbf')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-ef86ffc7-c68a-46b4-bbae-2c35ca691bbf button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-141872b3-505f-410c-9a7a-1b985fd4d320 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-141872b3-505f-410c-9a7a-1b985fd4d320');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":111}]},{"cell_type":"code","source":["telco_undersampling['Churn'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qWVLMmDzknGV","executionInfo":{"status":"ok","timestamp":1690867776664,"user_tz":-420,"elapsed":330,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"a43f2fe0-7736-4da5-cc38-2cffe2cc7f35"},"execution_count":112,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    1869\n","1    1869\n","Name: Churn, dtype: int64"]},"metadata":{},"execution_count":112}]},{"cell_type":"code","source":["telco_oversampling['Churn'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CjfkpX5qkr72","executionInfo":{"status":"ok","timestamp":1690867796643,"user_tz":-420,"elapsed":331,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"bd8a32ae-a486-40b9-927c-f61fa030ecb3"},"execution_count":113,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    5163\n","1    5163\n","Name: Churn, dtype: int64"]},"metadata":{},"execution_count":113}]},{"cell_type":"code","source":["telco_oversampling_smote['Churn'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"S0me_fSykw40","executionInfo":{"status":"ok","timestamp":1690867817403,"user_tz":-420,"elapsed":427,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"c85b2c63-0fec-45d0-d16d-1176904c9bf4"},"execution_count":114,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    5163\n","1    5163\n","Name: Churn, dtype: int64"]},"metadata":{},"execution_count":114}]},{"cell_type":"markdown","source":["## Random Forest with Imbalance data"],"metadata":{"id":"8qcp0WlAk5oO"}},{"cell_type":"code","source":["from sklearn.ensemble import RandomForestClassifier"],"metadata":{"id":"W8ioxzWUiH7L","executionInfo":{"status":"ok","timestamp":1690867878874,"user_tz":-420,"elapsed":627,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}}},"execution_count":117,"outputs":[]},{"cell_type":"code","source":["telco.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":270},"id":"CXgIq5Ock2HD","executionInfo":{"status":"ok","timestamp":1690867863421,"user_tz":-420,"elapsed":342,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"63d18831-1a38-41c3-8776-90c471496a30"},"execution_count":116,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   SeniorCitizen  Partner  Dependents  tenure  PhoneService  MultipleLines  \\\n","0              0        1           0       1             0              3   \n","1              0        0           0      34             1              0   \n","2              0        0           0       2             1              0   \n","3              0        0           0      45             0              3   \n","4              0        0           0       2             1              0   \n","\n","   OnlineSecurity  OnlineBackup  DeviceProtection  TechSupport  StreamingTV  \\\n","0               0             1                 0            0            0   \n","1               1             0                 1            0            0   \n","2               1             1                 0            0            0   \n","3               1             0                 1            1            0   \n","4               0             0                 0            0            0   \n","\n","   StreamingMovies  PaperlessBilling  MonthlyCharges  TotalCharges  Churn  \\\n","0                0                 1           29.85     29.850000      0   \n","1                0                 0           56.95   1889.500000      0   \n","2                0                 1           53.85    108.150002      1   \n","3                0                 0           42.30   1840.750000      0   \n","4                0                 1           70.70    151.649994      1   \n","\n","   gender_label_encoding  contract_ordinal  paymethod  IService_ordinal  \n","0                      0                 1          3                 1  \n","1                      1                 2          4                 1  \n","2                      1                 1          4                 1  \n","3                      1                 2          1                 1  \n","4                      0                 1          3                 2  "],"text/html":["\n","\n","  <div id=\"df-5fc380d9-f801-4702-afdf-51de77b1f0c1\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>SeniorCitizen</th>\n","      <th>Partner</th>\n","      <th>Dependents</th>\n","      <th>tenure</th>\n","      <th>PhoneService</th>\n","      <th>MultipleLines</th>\n","      <th>OnlineSecurity</th>\n","      <th>OnlineBackup</th>\n","      <th>DeviceProtection</th>\n","      <th>TechSupport</th>\n","      <th>StreamingTV</th>\n","      <th>StreamingMovies</th>\n","      <th>PaperlessBilling</th>\n","      <th>MonthlyCharges</th>\n","      <th>TotalCharges</th>\n","      <th>Churn</th>\n","      <th>gender_label_encoding</th>\n","      <th>contract_ordinal</th>\n","      <th>paymethod</th>\n","      <th>IService_ordinal</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>29.85</td>\n","      <td>29.850000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>34</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>56.95</td>\n","      <td>1889.500000</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>4</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>53.85</td>\n","      <td>108.150002</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>45</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>42.30</td>\n","      <td>1840.750000</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>70.70</td>\n","      <td>151.649994</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5fc380d9-f801-4702-afdf-51de77b1f0c1')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-abfaae03-a753-4529-944c-55c81a57db8d\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-abfaae03-a753-4529-944c-55c81a57db8d')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-abfaae03-a753-4529-944c-55c81a57db8d button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-5fc380d9-f801-4702-afdf-51de77b1f0c1 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-5fc380d9-f801-4702-afdf-51de77b1f0c1');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":116}]},{"cell_type":"markdown","source":["Split Datasets"],"metadata":{"id":"q9diQFz8lFRE"}},{"cell_type":"code","source":["feature = telco.drop(['Churn'],axis = 1)\n","target = telco['Churn']"],"metadata":{"id":"xFYELG7-jnYm","executionInfo":{"status":"ok","timestamp":1690868166553,"user_tz":-420,"elapsed":7,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}}},"execution_count":127,"outputs":[]},{"cell_type":"code","source":["feature_train, feature_test, target_train, target_test = train_test_split(feature, target, test_size=0.20, random_state=42)\n","\n","# 80% train\n","# 20% test"],"metadata":{"id":"LzfUBPFoldSj","executionInfo":{"status":"ok","timestamp":1690868170770,"user_tz":-420,"elapsed":343,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}}},"execution_count":128,"outputs":[]},{"cell_type":"code","source":["feature_train.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":270},"id":"eNiZauOjlpjp","executionInfo":{"status":"ok","timestamp":1690868184802,"user_tz":-420,"elapsed":336,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"fed69e02-559e-4376-df44-78abe4cbfd40"},"execution_count":129,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      SeniorCitizen  Partner  Dependents  tenure  PhoneService  MultipleLines  \\\n","6030              0        0           0      43             0              3   \n","3410              0        0           0       3             1              0   \n","5483              0        1           0      55             1              1   \n","5524              0        1           1      45             1              0   \n","6337              0        1           1      55             1              1   \n","\n","      OnlineSecurity  OnlineBackup  DeviceProtection  TechSupport  \\\n","6030               0             0                 1            0   \n","3410               0             0                 0            0   \n","5483               0             0                 1            0   \n","5524               1             0                 0            1   \n","6337               1             0                 0            0   \n","\n","      StreamingTV  StreamingMovies  PaperlessBilling  MonthlyCharges  \\\n","6030            1                1                 1           49.05   \n","3410            1                0                 0           53.40   \n","5483            0                0                 1           77.75   \n","5524            0                0                 0           54.65   \n","6337            1                1                 0          100.90   \n","\n","      TotalCharges  gender_label_encoding  contract_ordinal  paymethod  \\\n","6030   2076.199951                      0                 1          1   \n","3410    188.699997                      1                 1          2   \n","5483   4458.149902                      0                 1          3   \n","5524   2553.699951                      1                 3          1   \n","6337   5448.600098                      0                 2          4   \n","\n","      IService_ordinal  \n","6030                 1  \n","3410                 1  \n","5483                 2  \n","5524                 1  \n","6337                 2  "],"text/html":["\n","\n","  <div id=\"df-6cfacb98-d3fb-4746-9e5f-cbfe8acacad5\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>SeniorCitizen</th>\n","      <th>Partner</th>\n","      <th>Dependents</th>\n","      <th>tenure</th>\n","      <th>PhoneService</th>\n","      <th>MultipleLines</th>\n","      <th>OnlineSecurity</th>\n","      <th>OnlineBackup</th>\n","      <th>DeviceProtection</th>\n","      <th>TechSupport</th>\n","      <th>StreamingTV</th>\n","      <th>StreamingMovies</th>\n","      <th>PaperlessBilling</th>\n","      <th>MonthlyCharges</th>\n","      <th>TotalCharges</th>\n","      <th>gender_label_encoding</th>\n","      <th>contract_ordinal</th>\n","      <th>paymethod</th>\n","      <th>IService_ordinal</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>6030</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>43</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>49.05</td>\n","      <td>2076.199951</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3410</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>53.40</td>\n","      <td>188.699997</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>5483</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>55</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>77.75</td>\n","      <td>4458.149902</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>5524</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>45</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>54.65</td>\n","      <td>2553.699951</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>6337</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>55</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>100.90</td>\n","      <td>5448.600098</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>4</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6cfacb98-d3fb-4746-9e5f-cbfe8acacad5')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-dc63922c-baba-4331-a661-6ab06d05db77\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-dc63922c-baba-4331-a661-6ab06d05db77')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-dc63922c-baba-4331-a661-6ab06d05db77 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-6cfacb98-d3fb-4746-9e5f-cbfe8acacad5 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-6cfacb98-d3fb-4746-9e5f-cbfe8acacad5');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":129}]},{"cell_type":"markdown","source":["### Modeling"],"metadata":{"id":"Nlul9TMql5r6"}},{"cell_type":"code","source":["model = RandomForestClassifier()\n","model.fit(feature_train, target_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":75},"id":"_z8CNepLltfz","executionInfo":{"status":"ok","timestamp":1690868189038,"user_tz":-420,"elapsed":1093,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"488bac27-fcde-44b4-ebd1-41ee2acebc45"},"execution_count":130,"outputs":[{"output_type":"execute_result","data":{"text/plain":["RandomForestClassifier()"],"text/html":["<style>#sk-container-id-3 {color: black;background-color: white;}#sk-container-id-3 pre{padding: 0;}#sk-container-id-3 div.sk-toggleable {background-color: white;}#sk-container-id-3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-3 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-3 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-3 div.sk-item {position: relative;z-index: 1;}#sk-container-id-3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-3 div.sk-item::before, #sk-container-id-3 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-3 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-3 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-3 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-3 div.sk-label-container {text-align: center;}#sk-container-id-3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-3 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestClassifier()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" checked><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":130}]},{"cell_type":"code","source":["preds = model.predict(feature_test)"],"metadata":{"id":"D07UWbnjl_XS","executionInfo":{"status":"ok","timestamp":1690868190486,"user_tz":-420,"elapsed":5,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}}},"execution_count":131,"outputs":[]},{"cell_type":"code","source":["preds"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"220GGUoFmfOY","executionInfo":{"status":"ok","timestamp":1690868253797,"user_tz":-420,"elapsed":332,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"cc1b3114-6aef-4ab3-eec5-07ec2048a772"},"execution_count":133,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 0, 1, ..., 0, 0, 0])"]},"metadata":{},"execution_count":133}]},{"cell_type":"markdown","source":["### Metric Evaluation"],"metadata":{"id":"YHh5TUoUmTO9"}},{"cell_type":"code","source":["from sklearn.metrics import confusion_matrix, roc_auc_score, f1_score, recall_score"],"metadata":{"id":"hDPay6fpmRQC","executionInfo":{"status":"ok","timestamp":1690868240930,"user_tz":-420,"elapsed":531,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}}},"execution_count":132,"outputs":[]},{"cell_type":"code","source":["cm = confusion_matrix(target_test, preds)\n","cm"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"H-MjJSTimkvJ","executionInfo":{"status":"ok","timestamp":1690868289106,"user_tz":-420,"elapsed":321,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"b29d062c-2d8b-4122-fde2-f5d0d552e3a0"},"execution_count":134,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[936,  97],\n","       [201, 173]])"]},"metadata":{},"execution_count":134}]},{"cell_type":"code","source":["# y_test = actual\n","# preds = prediksi"],"metadata":{"id":"c8pGf_APmpPc"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.metrics import accuracy_score, recall_score, precision_score\n","from sklearn.metrics import confusion_matrix, roc_auc_score, f1_score, recall_score"],"metadata":{"id":"vJFhtHTjmtGF","executionInfo":{"status":"ok","timestamp":1690868314592,"user_tz":-420,"elapsed":7,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}}},"execution_count":135,"outputs":[]},{"cell_type":"code","source":["# calculate AUC\n","from sklearn.metrics import roc_auc_score\n","print('AUC ',roc_auc_score(target_test, preds))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"I9lFu_fpmxKj","executionInfo":{"status":"ok","timestamp":1690879520590,"user_tz":-420,"elapsed":334,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"bdf0b286-fc04-4b09-8e35-a2f028771a91"},"execution_count":158,"outputs":[{"output_type":"stream","name":"stdout","text":["AUC  0.6843327932246558\n"]}]},{"cell_type":"markdown","source":["The AUC (Area Under the Curve) score is 0.6871. AUC measures the ability of the model to distinguish between positive and negative samples. A value closer to 1 indicates better performance."],"metadata":{"id":"_ZvtU2_HRf9R"}},{"cell_type":"code","source":["# calculate F1 Score\n","from sklearn.metrics import f1_score\n","print('F1 Score ',f1_score(target_test, preds))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7a0yb1sFmzYw","executionInfo":{"status":"ok","timestamp":1690868361902,"user_tz":-420,"elapsed":335,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"f8169ccc-bbe8-4961-f9f2-13d9f8a77cb4"},"execution_count":137,"outputs":[{"output_type":"stream","name":"stdout","text":["F1 Score  0.5372670807453417\n"]}]},{"cell_type":"markdown","source":["The F1 score is 0.5724. It balances precision and recall and is a good measure when dealing with imbalanced classes. The F1 score ranges from 0 to 1, with higher values indicating better performance."],"metadata":{"id":"3YzBYOFQRmWa"}},{"cell_type":"markdown","source":["How to find the Precision and Recall?"],"metadata":{"id":"qVlnOT1Fm86V"}},{"cell_type":"code","source":["# calculate Precision\n","from sklearn.metrics import precision_score\n","print('Precision ',precision_score(target_test, preds))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"J7pnA4kym68U","executionInfo":{"status":"ok","timestamp":1690868389439,"user_tz":-420,"elapsed":383,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"a2bc6c64-9b5e-40fc-f767-c00fbd464c64"},"execution_count":138,"outputs":[{"output_type":"stream","name":"stdout","text":["Precision  0.6407407407407407\n"]}]},{"cell_type":"markdown","source":["In conclusion, a precision of 0.6407407407407407 might be an indicator of the model's ability to identify positive instances correctly"],"metadata":{"id":"VJeP4eisQyWk"}},{"cell_type":"code","source":["# calculate Recall\n","from sklearn.metrics import recall_score\n","print('Recall ',recall_score(target_test, preds))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oFaGfuLinBe0","executionInfo":{"status":"ok","timestamp":1690868407535,"user_tz":-420,"elapsed":317,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"160b715b-6d91-4170-da4f-d61d69352c72"},"execution_count":139,"outputs":[{"output_type":"stream","name":"stdout","text":["Recall  0.4625668449197861\n"]}]},{"cell_type":"markdown","source":["the recall value is 0.4625, which means the model correctly identified approximately 46.25% of all actual positive examples in the test set."],"metadata":{"id":"oDoANy0RRQlR"}},{"cell_type":"code","source":["feature_train.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":270},"id":"fofylQeAnJ5X","executionInfo":{"status":"ok","timestamp":1690868429000,"user_tz":-420,"elapsed":14,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"855ad9fb-1dc5-49e5-a9d6-6513160857ec"},"execution_count":140,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      SeniorCitizen  Partner  Dependents  tenure  PhoneService  MultipleLines  \\\n","6030              0        0           0      43             0              3   \n","3410              0        0           0       3             1              0   \n","5483              0        1           0      55             1              1   \n","5524              0        1           1      45             1              0   \n","6337              0        1           1      55             1              1   \n","\n","      OnlineSecurity  OnlineBackup  DeviceProtection  TechSupport  \\\n","6030               0             0                 1            0   \n","3410               0             0                 0            0   \n","5483               0             0                 1            0   \n","5524               1             0                 0            1   \n","6337               1             0                 0            0   \n","\n","      StreamingTV  StreamingMovies  PaperlessBilling  MonthlyCharges  \\\n","6030            1                1                 1           49.05   \n","3410            1                0                 0           53.40   \n","5483            0                0                 1           77.75   \n","5524            0                0                 0           54.65   \n","6337            1                1                 0          100.90   \n","\n","      TotalCharges  gender_label_encoding  contract_ordinal  paymethod  \\\n","6030   2076.199951                      0                 1          1   \n","3410    188.699997                      1                 1          2   \n","5483   4458.149902                      0                 1          3   \n","5524   2553.699951                      1                 3          1   \n","6337   5448.600098                      0                 2          4   \n","\n","      IService_ordinal  \n","6030                 1  \n","3410                 1  \n","5483                 2  \n","5524                 1  \n","6337                 2  "],"text/html":["\n","\n","  <div id=\"df-657e657c-b344-435f-b00a-a6ef14f9adda\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>SeniorCitizen</th>\n","      <th>Partner</th>\n","      <th>Dependents</th>\n","      <th>tenure</th>\n","      <th>PhoneService</th>\n","      <th>MultipleLines</th>\n","      <th>OnlineSecurity</th>\n","      <th>OnlineBackup</th>\n","      <th>DeviceProtection</th>\n","      <th>TechSupport</th>\n","      <th>StreamingTV</th>\n","      <th>StreamingMovies</th>\n","      <th>PaperlessBilling</th>\n","      <th>MonthlyCharges</th>\n","      <th>TotalCharges</th>\n","      <th>gender_label_encoding</th>\n","      <th>contract_ordinal</th>\n","      <th>paymethod</th>\n","      <th>IService_ordinal</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>6030</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>43</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>49.05</td>\n","      <td>2076.199951</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3410</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>53.40</td>\n","      <td>188.699997</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>5483</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>55</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>77.75</td>\n","      <td>4458.149902</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>5524</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>45</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>54.65</td>\n","      <td>2553.699951</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>6337</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>55</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>100.90</td>\n","      <td>5448.600098</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>4</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-657e657c-b344-435f-b00a-a6ef14f9adda')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-4e75417a-ba42-4f1b-8a2c-b6ccd669e7ee\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4e75417a-ba42-4f1b-8a2c-b6ccd669e7ee')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-4e75417a-ba42-4f1b-8a2c-b6ccd669e7ee button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-657e657c-b344-435f-b00a-a6ef14f9adda button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-657e657c-b344-435f-b00a-a6ef14f9adda');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":140}]},{"cell_type":"code","source":["target_test.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7NUbPgYVnLwR","executionInfo":{"status":"ok","timestamp":1690868444247,"user_tz":-420,"elapsed":332,"user":{"displayName":"Anggita Putri Lestari","userId":"16221148217809100285"}},"outputId":"2e392f9f-65a8-41fc-9a83-eb030f21f61d"},"execution_count":141,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2481    0\n","6784    0\n","6125    1\n","3052    0\n","4099    0\n","Name: Churn, dtype: int64"]},"metadata":{},"execution_count":141}]}]}